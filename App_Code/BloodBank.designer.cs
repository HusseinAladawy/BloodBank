#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_A34845_bloodsaving")]
public partial class BloodBankDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertBranch(Branch instance);
  partial void UpdateBranch(Branch instance);
  partial void DeleteBranch(Branch instance);
  partial void InsertFavoritePlace(FavoritePlace instance);
  partial void UpdateFavoritePlace(FavoritePlace instance);
  partial void DeleteFavoritePlace(FavoritePlace instance);
  partial void InsertFavoriteType(FavoriteType instance);
  partial void UpdateFavoriteType(FavoriteType instance);
  partial void DeleteFavoriteType(FavoriteType instance);
  partial void InsertJob(Job instance);
  partial void UpdateJob(Job instance);
  partial void DeleteJob(Job instance);
  partial void InsertTerritory(Territory instance);
  partial void UpdateTerritory(Territory instance);
  partial void DeleteTerritory(Territory instance);
  partial void InsertVolunteerCall(VolunteerCall instance);
  partial void UpdateVolunteerCall(VolunteerCall instance);
  partial void DeleteVolunteerCall(VolunteerCall instance);
  partial void InsertVolunteerHistory(VolunteerHistory instance);
  partial void UpdateVolunteerHistory(VolunteerHistory instance);
  partial void DeleteVolunteerHistory(VolunteerHistory instance);
  partial void InsertVolunteerLast(VolunteerLast instance);
  partial void UpdateVolunteerLast(VolunteerLast instance);
  partial void DeleteVolunteerLast(VolunteerLast instance);
  partial void InsertVolunteerPlace(VolunteerPlace instance);
  partial void UpdateVolunteerPlace(VolunteerPlace instance);
  partial void DeleteVolunteerPlace(VolunteerPlace instance);
  partial void InsertLog(Log instance);
  partial void UpdateLog(Log instance);
  partial void DeleteLog(Log instance);
  partial void InsertDisease(Disease instance);
  partial void UpdateDisease(Disease instance);
  partial void DeleteDisease(Disease instance);
  partial void InsertHospital(Hospital instance);
  partial void UpdateHospital(Hospital instance);
  partial void DeleteHospital(Hospital instance);
  partial void InsertKid_Call(Kid_Call instance);
  partial void UpdateKid_Call(Kid_Call instance);
  partial void DeleteKid_Call(Kid_Call instance);
  partial void InsertKid_Help(Kid_Help instance);
  partial void UpdateKid_Help(Kid_Help instance);
  partial void DeleteKid_Help(Kid_Help instance);
  partial void InsertHelp_Type(Help_Type instance);
  partial void UpdateHelp_Type(Help_Type instance);
  partial void DeleteHelp_Type(Help_Type instance);
  partial void InsertKid_Transfer(Kid_Transfer instance);
  partial void UpdateKid_Transfer(Kid_Transfer instance);
  partial void DeleteKid_Transfer(Kid_Transfer instance);
  partial void InsertGovernerate(Governerate instance);
  partial void UpdateGovernerate(Governerate instance);
  partial void DeleteGovernerate(Governerate instance);
  partial void InsertVolunteer_Kid(Volunteer_Kid instance);
  partial void UpdateVolunteer_Kid(Volunteer_Kid instance);
  partial void DeleteVolunteer_Kid(Volunteer_Kid instance);
  partial void InsertHearAboutUs(HearAboutUs instance);
  partial void UpdateHearAboutUs(HearAboutUs instance);
  partial void DeleteHearAboutUs(HearAboutUs instance);
  partial void InsertVolunteer(Volunteer instance);
  partial void UpdateVolunteer(Volunteer instance);
  partial void DeleteVolunteer(Volunteer instance);
  partial void InsertKid(Kid instance);
  partial void UpdateKid(Kid instance);
  partial void DeleteKid(Kid instance);
  partial void InsertDonationPlaceType(DonationPlaceType instance);
  partial void UpdateDonationPlaceType(DonationPlaceType instance);
  partial void DeleteDonationPlaceType(DonationPlaceType instance);
  partial void InsertDonationPlace(DonationPlace instance);
  partial void UpdateDonationPlace(DonationPlace instance);
  partial void DeleteDonationPlace(DonationPlace instance);
  partial void InsertArchivingReason(ArchivingReason instance);
  partial void UpdateArchivingReason(ArchivingReason instance);
  partial void DeleteArchivingReason(ArchivingReason instance);
  partial void Insertaspnet_User(aspnet_User instance);
  partial void Updateaspnet_User(aspnet_User instance);
  partial void Deleteaspnet_User(aspnet_User instance);
  partial void Insertaspnet_Membership(aspnet_Membership instance);
  partial void Updateaspnet_Membership(aspnet_Membership instance);
  partial void Deleteaspnet_Membership(aspnet_Membership instance);
  #endregion
	
	public BloodBankDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BloodBankConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public BloodBankDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BloodBankDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BloodBankDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BloodBankDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Branch> Branches
	{
		get
		{
			return this.GetTable<Branch>();
		}
	}
	
	public System.Data.Linq.Table<FavoritePlace> FavoritePlaces
	{
		get
		{
			return this.GetTable<FavoritePlace>();
		}
	}
	
	public System.Data.Linq.Table<FavoriteType> FavoriteTypes
	{
		get
		{
			return this.GetTable<FavoriteType>();
		}
	}
	
	public System.Data.Linq.Table<Job> Jobs
	{
		get
		{
			return this.GetTable<Job>();
		}
	}
	
	public System.Data.Linq.Table<Territory> Territories
	{
		get
		{
			return this.GetTable<Territory>();
		}
	}
	
	public System.Data.Linq.Table<VolunteerCall> VolunteerCalls
	{
		get
		{
			return this.GetTable<VolunteerCall>();
		}
	}
	
	public System.Data.Linq.Table<VolunteerHistory> VolunteerHistories
	{
		get
		{
			return this.GetTable<VolunteerHistory>();
		}
	}
	
	public System.Data.Linq.Table<VolunteerLast> VolunteerLasts
	{
		get
		{
			return this.GetTable<VolunteerLast>();
		}
	}
	
	public System.Data.Linq.Table<VolunteerPlace> VolunteerPlaces
	{
		get
		{
			return this.GetTable<VolunteerPlace>();
		}
	}
	
	public System.Data.Linq.Table<Log> Logs
	{
		get
		{
			return this.GetTable<Log>();
		}
	}
	
	public System.Data.Linq.Table<Disease> Diseases
	{
		get
		{
			return this.GetTable<Disease>();
		}
	}
	
	public System.Data.Linq.Table<Hospital> Hospitals
	{
		get
		{
			return this.GetTable<Hospital>();
		}
	}
	
	public System.Data.Linq.Table<Kid_Call> Kid_Calls
	{
		get
		{
			return this.GetTable<Kid_Call>();
		}
	}
	
	public System.Data.Linq.Table<Kid_Help> Kid_Helps
	{
		get
		{
			return this.GetTable<Kid_Help>();
		}
	}
	
	public System.Data.Linq.Table<Help_Type> Help_Types
	{
		get
		{
			return this.GetTable<Help_Type>();
		}
	}
	
	public System.Data.Linq.Table<Kid_Transfer> Kid_Transfers
	{
		get
		{
			return this.GetTable<Kid_Transfer>();
		}
	}
	
	public System.Data.Linq.Table<Governerate> Governerates
	{
		get
		{
			return this.GetTable<Governerate>();
		}
	}
	
	public System.Data.Linq.Table<Volunteer_Kid> Volunteer_Kids
	{
		get
		{
			return this.GetTable<Volunteer_Kid>();
		}
	}
	
	public System.Data.Linq.Table<HearAboutUs> HearAboutUs
	{
		get
		{
			return this.GetTable<HearAboutUs>();
		}
	}
	
	public System.Data.Linq.Table<Volunteer> Volunteers
	{
		get
		{
			return this.GetTable<Volunteer>();
		}
	}
	
	public System.Data.Linq.Table<Kid> Kids
	{
		get
		{
			return this.GetTable<Kid>();
		}
	}
	
	public System.Data.Linq.Table<DonationPlaceType> DonationPlaceTypes
	{
		get
		{
			return this.GetTable<DonationPlaceType>();
		}
	}
	
	public System.Data.Linq.Table<DonationPlace> DonationPlaces
	{
		get
		{
			return this.GetTable<DonationPlace>();
		}
	}
	
	public System.Data.Linq.Table<ArchivingReason> ArchivingReasons
	{
		get
		{
			return this.GetTable<ArchivingReason>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_User> aspnet_Users
	{
		get
		{
			return this.GetTable<aspnet_User>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
	{
		get
		{
			return this.GetTable<aspnet_Membership>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LogInsert")]
	public int LogInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Action", DbType="NVarChar(500)")] string action, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionDate", DbType="DateTime")] System.Nullable<System.DateTime> actionDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionIN", DbType="NVarChar(500)")] string actionIN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VID", DbType="Int")] System.Nullable<int> vID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), action, userID, actionDate, actionIN, vID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LogSearch")]
	public ISingleResult<LogSearchResult> LogSearch([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Action", DbType="NVarChar(500)")] string action, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="Date")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="Date")] System.Nullable<System.DateTime> toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionIN", DbType="NVarChar(500)")] string actionIN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VID", DbType="Int")] System.Nullable<int> vID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), action, userID, fromDate, toDate, actionIN, vID);
		return ((ISingleResult<LogSearchResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EmergencySearch")]
	public ISingleResult<EmergencySearchResult> EmergencySearch([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BloodType", DbType="NVarChar(1)")] string bloodType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TerritoryID", DbType="Int")] System.Nullable<int> territoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FavPlaceID", DbType="Int")] System.Nullable<int> favPlaceID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="NVarChar(1)")] string gender, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MobileNetwork", DbType="NVarChar(1)")] string mobileNetwork, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Evaluation", DbType="NVarChar(1)")] string evaluation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Platelet", DbType="NVarChar(1)")] string platelet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FavoriteTypeID", DbType="Int")] System.Nullable<int> favoriteTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CallPoints", DbType="Int")] System.Nullable<int> callPoints, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DonationPoints", DbType="Int")] System.Nullable<int> donationPoints)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bloodType, territoryID, favPlaceID, gender, mobileNetwork, evaluation, platelet, favoriteTypeID, callPoints, donationPoints);
		return ((ISingleResult<EmergencySearchResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Volunteer_Kid_Insert")]
	public int Volunteer_Kid_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="V_ID_FK", DbType="Int")] System.Nullable<int> v_ID_FK, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="K_ID_FK", DbType="Int")] System.Nullable<int> k_ID_FK)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), v_ID_FK, k_ID_FK);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Deleted_Volunteer")]
	public ISingleResult<Deleted_VolunteerResult> Deleted_Volunteer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="Date")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="Date")] System.Nullable<System.DateTime> toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mobile", DbType="NVarChar(20)")] string mobile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VID", DbType="Int")] System.Nullable<int> vID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, fromDate, toDate, mobile, vID);
		return ((ISingleResult<Deleted_VolunteerResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Kid_Search")]
	public ISingleResult<Kid_SearchResult> Kid_Search(
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDNo", DbType="NVarChar(15)")] string iDNo, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(255)")] string name, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TerritoryID", DbType="Int")] System.Nullable<int> territoryID, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="NVarChar(1)")] string gender, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="K_ID", DbType="Int")] System.Nullable<int> k_ID, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(1)")] string status, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HospitalID", DbType="Int")] System.Nullable<int> hospitalID, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DiseaseID", DbType="Int")] System.Nullable<int> diseaseID, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ABO", DbType="NVarChar(2)")] string aBO, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RH", DbType="NVarChar(2)")] string rH, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(2)")] string c_, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="C", DbType="NVarChar(2)")] string c, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(2)")] string e_, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="E", DbType="NVarChar(2)")] string e, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Kell", DbType="NVarChar(2)")] string kell, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="Date")] System.Nullable<System.DateTime> fromDate, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="Date")] System.Nullable<System.DateTime> toDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDNo, name, territoryID, gender, k_ID, status, hospitalID, diseaseID, aBO, rH, c_, c, e_, e, kell, fromDate, toDate);
		return ((ISingleResult<Kid_SearchResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchVolunteer")]
	public ISingleResult<SearchVolunteerResult> SearchVolunteer(
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RowNum", DbType="Int")] System.Nullable<int> rowNum, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDNo", DbType="NVarChar(15)")] string iDNo, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(255)")] string name, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone", DbType="NVarChar(255)")] string phone, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mobile", DbType="NVarChar(20)")] string mobile, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WhatsApp", DbType="Bit")] System.Nullable<bool> whatsApp, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(500)")] string email, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TerritoryID", DbType="Int")] System.Nullable<int> territoryID, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Job", DbType="NVarChar(1)")] string job, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="NVarChar(1)")] string gender, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MobileNetwork", DbType="NVarChar(1)")] string mobileNetwork, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BirthYear", DbType="NVarChar(5)")] string birthYear, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Evaluation", DbType="NVarChar(1)")] string evaluation, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Platelet", DbType="NVarChar(1)")] string platelet, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NotAvailable", DbType="NVarChar(1)")] string notAvailable, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FavPlaceID", DbType="Int")] System.Nullable<int> favPlaceID, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1)")] string hold, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Inactive", DbType="Bit")] System.Nullable<bool> inactive, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="V_ID", DbType="Int")] System.Nullable<int> v_ID, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="Date")] System.Nullable<System.DateTime> fromDate, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="Date")] System.Nullable<System.DateTime> toDate, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FavoriteTypeID", DbType="Int")] System.Nullable<int> favoriteTypeID, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CallPoints", DbType="Int")] System.Nullable<int> callPoints, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DonationPoints", DbType="Int")] System.Nullable<int> donationPoints, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ABO", DbType="NVarChar(2)")] string aBO, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RH", DbType="NVarChar(2)")] string rH, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(2)")] string c_, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="C", DbType="NVarChar(2)")] string c, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(2)")] string e_, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="E", DbType="NVarChar(2)")] string e, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Kell", DbType="NVarChar(2)")] string kell, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Kafala", DbType="NVarChar(2)")] string kafala, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ready", DbType="NVarChar(1)")] string ready, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveData", DbType="Bit")] System.Nullable<bool> activeData, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InActiveData", DbType="Bit")] System.Nullable<bool> inActiveData, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Heared", DbType="Int")] System.Nullable<int> heared, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GovID", DbType="Int")] System.Nullable<int> govID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rowNum, iDNo, name, phone, mobile, whatsApp, email, territoryID, job, gender, mobileNetwork, birthYear, evaluation, platelet, notAvailable, favPlaceID, hold, inactive, v_ID, fromDate, toDate, favoriteTypeID, callPoints, donationPoints, aBO, rH, c_, c, e_, e, kell, kafala, ready, activeData, inActiveData, heared, govID);
		return ((ISingleResult<SearchVolunteerResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BranchID;
	
	private string _BranchName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    #endregion
	
	public Branch()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BranchID
	{
		get
		{
			return this._BranchID;
		}
		set
		{
			if ((this._BranchID != value))
			{
				this.OnBranchIDChanging(value);
				this.SendPropertyChanging();
				this._BranchID = value;
				this.SendPropertyChanged("BranchID");
				this.OnBranchIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string BranchName
	{
		get
		{
			return this._BranchName;
		}
		set
		{
			if ((this._BranchName != value))
			{
				this.OnBranchNameChanging(value);
				this.SendPropertyChanging();
				this._BranchName = value;
				this.SendPropertyChanged("BranchName");
				this.OnBranchNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FavoritePlaces")]
public partial class FavoritePlace : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PlaceID;
	
	private string _FavPlace;
	
	private int _FavoriteTypeID;
	
	private string _OLDName;
	
	private EntitySet<VolunteerPlace> _VolunteerPlaces;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlaceIDChanging(int value);
    partial void OnPlaceIDChanged();
    partial void OnFavPlaceChanging(string value);
    partial void OnFavPlaceChanged();
    partial void OnFavoriteTypeIDChanging(int value);
    partial void OnFavoriteTypeIDChanged();
    partial void OnOLDNameChanging(string value);
    partial void OnOLDNameChanged();
    #endregion
	
	public FavoritePlace()
	{
		this._VolunteerPlaces = new EntitySet<VolunteerPlace>(new Action<VolunteerPlace>(this.attach_VolunteerPlaces), new Action<VolunteerPlace>(this.detach_VolunteerPlaces));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PlaceID
	{
		get
		{
			return this._PlaceID;
		}
		set
		{
			if ((this._PlaceID != value))
			{
				this.OnPlaceIDChanging(value);
				this.SendPropertyChanging();
				this._PlaceID = value;
				this.SendPropertyChanged("PlaceID");
				this.OnPlaceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavPlace", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string FavPlace
	{
		get
		{
			return this._FavPlace;
		}
		set
		{
			if ((this._FavPlace != value))
			{
				this.OnFavPlaceChanging(value);
				this.SendPropertyChanging();
				this._FavPlace = value;
				this.SendPropertyChanged("FavPlace");
				this.OnFavPlaceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavoriteTypeID", DbType="Int NOT NULL")]
	public int FavoriteTypeID
	{
		get
		{
			return this._FavoriteTypeID;
		}
		set
		{
			if ((this._FavoriteTypeID != value))
			{
				this.OnFavoriteTypeIDChanging(value);
				this.SendPropertyChanging();
				this._FavoriteTypeID = value;
				this.SendPropertyChanged("FavoriteTypeID");
				this.OnFavoriteTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDName", DbType="NVarChar(255)")]
	public string OLDName
	{
		get
		{
			return this._OLDName;
		}
		set
		{
			if ((this._OLDName != value))
			{
				this.OnOLDNameChanging(value);
				this.SendPropertyChanging();
				this._OLDName = value;
				this.SendPropertyChanged("OLDName");
				this.OnOLDNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FavoritePlace_VolunteerPlace", Storage="_VolunteerPlaces", ThisKey="PlaceID", OtherKey="PlaceID")]
	public EntitySet<VolunteerPlace> VolunteerPlaces
	{
		get
		{
			return this._VolunteerPlaces;
		}
		set
		{
			this._VolunteerPlaces.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_VolunteerPlaces(VolunteerPlace entity)
	{
		this.SendPropertyChanging();
		entity.FavoritePlace = this;
	}
	
	private void detach_VolunteerPlaces(VolunteerPlace entity)
	{
		this.SendPropertyChanging();
		entity.FavoritePlace = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FavoriteTypes")]
public partial class FavoriteType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TypeID;
	
	private string _Type;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
	
	public FavoriteType()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int TypeID
	{
		get
		{
			return this._TypeID;
		}
		set
		{
			if ((this._TypeID != value))
			{
				this.OnTypeIDChanging(value);
				this.SendPropertyChanging();
				this._TypeID = value;
				this.SendPropertyChanged("TypeID");
				this.OnTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jobs")]
public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _JobID;
	
	private string _JobName;
	
	private EntitySet<Volunteer> _Volunteers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobIDChanging(int value);
    partial void OnJobIDChanged();
    partial void OnJobNameChanging(string value);
    partial void OnJobNameChanged();
    #endregion
	
	public Job()
	{
		this._Volunteers = new EntitySet<Volunteer>(new Action<Volunteer>(this.attach_Volunteers), new Action<Volunteer>(this.detach_Volunteers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int JobID
	{
		get
		{
			return this._JobID;
		}
		set
		{
			if ((this._JobID != value))
			{
				this.OnJobIDChanging(value);
				this.SendPropertyChanging();
				this._JobID = value;
				this.SendPropertyChanged("JobID");
				this.OnJobIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string JobName
	{
		get
		{
			return this._JobName;
		}
		set
		{
			if ((this._JobName != value))
			{
				this.OnJobNameChanging(value);
				this.SendPropertyChanging();
				this._JobName = value;
				this.SendPropertyChanged("JobName");
				this.OnJobNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Volunteer", Storage="_Volunteers", ThisKey="JobID", OtherKey="Job_ID")]
	public EntitySet<Volunteer> Volunteers
	{
		get
		{
			return this._Volunteers;
		}
		set
		{
			this._Volunteers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Volunteers(Volunteer entity)
	{
		this.SendPropertyChanging();
		entity.Job = this;
	}
	
	private void detach_Volunteers(Volunteer entity)
	{
		this.SendPropertyChanging();
		entity.Job = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Territory")]
public partial class Territory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TerritoryID;
	
	private string _TerritoryName;
	
	private System.Nullable<int> _GovernerateID;
	
	private EntitySet<Volunteer> _Volunteers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTerritoryIDChanging(int value);
    partial void OnTerritoryIDChanged();
    partial void OnTerritoryNameChanging(string value);
    partial void OnTerritoryNameChanged();
    partial void OnGovernerateIDChanging(System.Nullable<int> value);
    partial void OnGovernerateIDChanged();
    #endregion
	
	public Territory()
	{
		this._Volunteers = new EntitySet<Volunteer>(new Action<Volunteer>(this.attach_Volunteers), new Action<Volunteer>(this.detach_Volunteers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int TerritoryID
	{
		get
		{
			return this._TerritoryID;
		}
		set
		{
			if ((this._TerritoryID != value))
			{
				this.OnTerritoryIDChanging(value);
				this.SendPropertyChanging();
				this._TerritoryID = value;
				this.SendPropertyChanged("TerritoryID");
				this.OnTerritoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryName", DbType="NVarChar(100)")]
	public string TerritoryName
	{
		get
		{
			return this._TerritoryName;
		}
		set
		{
			if ((this._TerritoryName != value))
			{
				this.OnTerritoryNameChanging(value);
				this.SendPropertyChanging();
				this._TerritoryName = value;
				this.SendPropertyChanged("TerritoryName");
				this.OnTerritoryNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernerateID", DbType="Int")]
	public System.Nullable<int> GovernerateID
	{
		get
		{
			return this._GovernerateID;
		}
		set
		{
			if ((this._GovernerateID != value))
			{
				this.OnGovernerateIDChanging(value);
				this.SendPropertyChanging();
				this._GovernerateID = value;
				this.SendPropertyChanged("GovernerateID");
				this.OnGovernerateIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Territory_Volunteer", Storage="_Volunteers", ThisKey="TerritoryID", OtherKey="TerritoryID")]
	public EntitySet<Volunteer> Volunteers
	{
		get
		{
			return this._Volunteers;
		}
		set
		{
			this._Volunteers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Volunteers(Volunteer entity)
	{
		this.SendPropertyChanging();
		entity.Territory = this;
	}
	
	private void detach_Volunteers(Volunteer entity)
	{
		this.SendPropertyChanging();
		entity.Territory = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VolunteerCalls")]
public partial class VolunteerCall : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CallID;
	
	private int _VolunteerID;
	
	private string _Comments;
	
	private System.Nullable<System.DateTime> _CallDate;
	
	private EntityRef<Volunteer> _Volunteer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCallIDChanging(int value);
    partial void OnCallIDChanged();
    partial void OnVolunteerIDChanging(int value);
    partial void OnVolunteerIDChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnCallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCallDateChanged();
    #endregion
	
	public VolunteerCall()
	{
		this._Volunteer = default(EntityRef<Volunteer>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CallID
	{
		get
		{
			return this._CallID;
		}
		set
		{
			if ((this._CallID != value))
			{
				this.OnCallIDChanging(value);
				this.SendPropertyChanging();
				this._CallID = value;
				this.SendPropertyChanged("CallID");
				this.OnCallIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolunteerID", DbType="Int NOT NULL")]
	public int VolunteerID
	{
		get
		{
			return this._VolunteerID;
		}
		set
		{
			if ((this._VolunteerID != value))
			{
				if (this._Volunteer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVolunteerIDChanging(value);
				this.SendPropertyChanging();
				this._VolunteerID = value;
				this.SendPropertyChanged("VolunteerID");
				this.OnVolunteerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
	public string Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			if ((this._Comments != value))
			{
				this.OnCommentsChanging(value);
				this.SendPropertyChanging();
				this._Comments = value;
				this.SendPropertyChanged("Comments");
				this.OnCommentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallDate", DbType="Date")]
	public System.Nullable<System.DateTime> CallDate
	{
		get
		{
			return this._CallDate;
		}
		set
		{
			if ((this._CallDate != value))
			{
				this.OnCallDateChanging(value);
				this.SendPropertyChanging();
				this._CallDate = value;
				this.SendPropertyChanged("CallDate");
				this.OnCallDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_VolunteerCall", Storage="_Volunteer", ThisKey="VolunteerID", OtherKey="V_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Volunteer Volunteer
	{
		get
		{
			return this._Volunteer.Entity;
		}
		set
		{
			Volunteer previousValue = this._Volunteer.Entity;
			if (((previousValue != value) 
						|| (this._Volunteer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Volunteer.Entity = null;
					previousValue.VolunteerCalls.Remove(this);
				}
				this._Volunteer.Entity = value;
				if ((value != null))
				{
					value.VolunteerCalls.Add(this);
					this._VolunteerID = value.V_ID;
				}
				else
				{
					this._VolunteerID = default(int);
				}
				this.SendPropertyChanged("Volunteer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VolunteerHistory")]
public partial class VolunteerHistory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _Volunteer_ID;
	
	private System.Nullable<int> _Place_ID;
	
	private System.Nullable<System.DateTime> _DonationDate;
	
	private string _Notes;
	
	private string _Status;
	
	private EntityRef<Volunteer> _Volunteer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVolunteer_IDChanging(System.Nullable<int> value);
    partial void OnVolunteer_IDChanged();
    partial void OnPlace_IDChanging(System.Nullable<int> value);
    partial void OnPlace_IDChanged();
    partial void OnDonationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDonationDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
	
	public VolunteerHistory()
	{
		this._Volunteer = default(EntityRef<Volunteer>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volunteer_ID", DbType="Int")]
	public System.Nullable<int> Volunteer_ID
	{
		get
		{
			return this._Volunteer_ID;
		}
		set
		{
			if ((this._Volunteer_ID != value))
			{
				if (this._Volunteer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVolunteer_IDChanging(value);
				this.SendPropertyChanging();
				this._Volunteer_ID = value;
				this.SendPropertyChanged("Volunteer_ID");
				this.OnVolunteer_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place_ID", DbType="Int")]
	public System.Nullable<int> Place_ID
	{
		get
		{
			return this._Place_ID;
		}
		set
		{
			if ((this._Place_ID != value))
			{
				this.OnPlace_IDChanging(value);
				this.SendPropertyChanging();
				this._Place_ID = value;
				this.SendPropertyChanged("Place_ID");
				this.OnPlace_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationDate", DbType="Date")]
	public System.Nullable<System.DateTime> DonationDate
	{
		get
		{
			return this._DonationDate;
		}
		set
		{
			if ((this._DonationDate != value))
			{
				this.OnDonationDateChanging(value);
				this.SendPropertyChanging();
				this._DonationDate = value;
				this.SendPropertyChanged("DonationDate");
				this.OnDonationDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(1)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_VolunteerHistory", Storage="_Volunteer", ThisKey="Volunteer_ID", OtherKey="V_ID", IsForeignKey=true, DeleteRule="CASCADE")]
	public Volunteer Volunteer
	{
		get
		{
			return this._Volunteer.Entity;
		}
		set
		{
			Volunteer previousValue = this._Volunteer.Entity;
			if (((previousValue != value) 
						|| (this._Volunteer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Volunteer.Entity = null;
					previousValue.VolunteerHistories.Remove(this);
				}
				this._Volunteer.Entity = value;
				if ((value != null))
				{
					value.VolunteerHistories.Add(this);
					this._Volunteer_ID = value.V_ID;
				}
				else
				{
					this._Volunteer_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Volunteer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VolunteerLast")]
public partial class VolunteerLast : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LastID;
	
	private System.Nullable<int> _VID;
	
	private System.Nullable<System.DateTime> _DonationDate;
	
	private string _Status;
	
	private string _Comments;
	
	private System.Nullable<System.DateTime> _CallDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLastIDChanging(int value);
    partial void OnLastIDChanged();
    partial void OnVIDChanging(System.Nullable<int> value);
    partial void OnVIDChanged();
    partial void OnDonationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDonationDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnCallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCallDateChanged();
    #endregion
	
	public VolunteerLast()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LastID
	{
		get
		{
			return this._LastID;
		}
		set
		{
			if ((this._LastID != value))
			{
				this.OnLastIDChanging(value);
				this.SendPropertyChanging();
				this._LastID = value;
				this.SendPropertyChanged("LastID");
				this.OnLastIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VID", DbType="Int")]
	public System.Nullable<int> VID
	{
		get
		{
			return this._VID;
		}
		set
		{
			if ((this._VID != value))
			{
				this.OnVIDChanging(value);
				this.SendPropertyChanging();
				this._VID = value;
				this.SendPropertyChanged("VID");
				this.OnVIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationDate", DbType="Date")]
	public System.Nullable<System.DateTime> DonationDate
	{
		get
		{
			return this._DonationDate;
		}
		set
		{
			if ((this._DonationDate != value))
			{
				this.OnDonationDateChanging(value);
				this.SendPropertyChanging();
				this._DonationDate = value;
				this.SendPropertyChanged("DonationDate");
				this.OnDonationDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(1)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
	public string Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			if ((this._Comments != value))
			{
				this.OnCommentsChanging(value);
				this.SendPropertyChanging();
				this._Comments = value;
				this.SendPropertyChanged("Comments");
				this.OnCommentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallDate", DbType="Date")]
	public System.Nullable<System.DateTime> CallDate
	{
		get
		{
			return this._CallDate;
		}
		set
		{
			if ((this._CallDate != value))
			{
				this.OnCallDateChanging(value);
				this.SendPropertyChanging();
				this._CallDate = value;
				this.SendPropertyChanged("CallDate");
				this.OnCallDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VolunteerPlaces")]
public partial class VolunteerPlace : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _VolunteerID;
	
	private int _PlaceID;
	
	private EntityRef<FavoritePlace> _FavoritePlace;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVolunteerIDChanging(int value);
    partial void OnVolunteerIDChanged();
    partial void OnPlaceIDChanging(int value);
    partial void OnPlaceIDChanged();
    #endregion
	
	public VolunteerPlace()
	{
		this._FavoritePlace = default(EntityRef<FavoritePlace>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolunteerID", DbType="Int NOT NULL")]
	public int VolunteerID
	{
		get
		{
			return this._VolunteerID;
		}
		set
		{
			if ((this._VolunteerID != value))
			{
				this.OnVolunteerIDChanging(value);
				this.SendPropertyChanging();
				this._VolunteerID = value;
				this.SendPropertyChanged("VolunteerID");
				this.OnVolunteerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceID", DbType="Int NOT NULL")]
	public int PlaceID
	{
		get
		{
			return this._PlaceID;
		}
		set
		{
			if ((this._PlaceID != value))
			{
				if (this._FavoritePlace.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPlaceIDChanging(value);
				this.SendPropertyChanging();
				this._PlaceID = value;
				this.SendPropertyChanged("PlaceID");
				this.OnPlaceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FavoritePlace_VolunteerPlace", Storage="_FavoritePlace", ThisKey="PlaceID", OtherKey="PlaceID", IsForeignKey=true)]
	public FavoritePlace FavoritePlace
	{
		get
		{
			return this._FavoritePlace.Entity;
		}
		set
		{
			FavoritePlace previousValue = this._FavoritePlace.Entity;
			if (((previousValue != value) 
						|| (this._FavoritePlace.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._FavoritePlace.Entity = null;
					previousValue.VolunteerPlaces.Remove(this);
				}
				this._FavoritePlace.Entity = value;
				if ((value != null))
				{
					value.VolunteerPlaces.Add(this);
					this._PlaceID = value.PlaceID;
				}
				else
				{
					this._PlaceID = default(int);
				}
				this.SendPropertyChanged("FavoritePlace");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LogID;
	
	private string _Action;
	
	private System.Nullable<System.Guid> _UserID;
	
	private System.Nullable<System.DateTime> _ActionDate;
	
	private string _ActionIN;
	
	private System.Nullable<int> _VID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OnActionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActionDateChanged();
    partial void OnActionINChanging(string value);
    partial void OnActionINChanged();
    partial void OnVIDChanging(System.Nullable<int> value);
    partial void OnVIDChanged();
    #endregion
	
	public Log()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LogID
	{
		get
		{
			return this._LogID;
		}
		set
		{
			if ((this._LogID != value))
			{
				this.OnLogIDChanging(value);
				this.SendPropertyChanging();
				this._LogID = value;
				this.SendPropertyChanged("LogID");
				this.OnLogIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(500)")]
	public string Action
	{
		get
		{
			return this._Action;
		}
		set
		{
			if ((this._Action != value))
			{
				this.OnActionChanging(value);
				this.SendPropertyChanging();
				this._Action = value;
				this.SendPropertyChanged("Action");
				this.OnActionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ActionDate
	{
		get
		{
			return this._ActionDate;
		}
		set
		{
			if ((this._ActionDate != value))
			{
				this.OnActionDateChanging(value);
				this.SendPropertyChanging();
				this._ActionDate = value;
				this.SendPropertyChanged("ActionDate");
				this.OnActionDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionIN", DbType="NVarChar(500)")]
	public string ActionIN
	{
		get
		{
			return this._ActionIN;
		}
		set
		{
			if ((this._ActionIN != value))
			{
				this.OnActionINChanging(value);
				this.SendPropertyChanging();
				this._ActionIN = value;
				this.SendPropertyChanged("ActionIN");
				this.OnActionINChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VID", DbType="Int")]
	public System.Nullable<int> VID
	{
		get
		{
			return this._VID;
		}
		set
		{
			if ((this._VID != value))
			{
				this.OnVIDChanging(value);
				this.SendPropertyChanging();
				this._VID = value;
				this.SendPropertyChanged("VID");
				this.OnVIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Disease")]
public partial class Disease : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DiseaseID;
	
	private string _DiseaseName;
	
	private EntitySet<Kid> _Kids;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiseaseIDChanging(int value);
    partial void OnDiseaseIDChanged();
    partial void OnDiseaseNameChanging(string value);
    partial void OnDiseaseNameChanged();
    #endregion
	
	public Disease()
	{
		this._Kids = new EntitySet<Kid>(new Action<Kid>(this.attach_Kids), new Action<Kid>(this.detach_Kids));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiseaseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DiseaseID
	{
		get
		{
			return this._DiseaseID;
		}
		set
		{
			if ((this._DiseaseID != value))
			{
				this.OnDiseaseIDChanging(value);
				this.SendPropertyChanging();
				this._DiseaseID = value;
				this.SendPropertyChanged("DiseaseID");
				this.OnDiseaseIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiseaseName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
	public string DiseaseName
	{
		get
		{
			return this._DiseaseName;
		}
		set
		{
			if ((this._DiseaseName != value))
			{
				this.OnDiseaseNameChanging(value);
				this.SendPropertyChanging();
				this._DiseaseName = value;
				this.SendPropertyChanged("DiseaseName");
				this.OnDiseaseNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disease_Kid", Storage="_Kids", ThisKey="DiseaseID", OtherKey="Disease_ID_FK")]
	public EntitySet<Kid> Kids
	{
		get
		{
			return this._Kids;
		}
		set
		{
			this._Kids.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Kids(Kid entity)
	{
		this.SendPropertyChanging();
		entity.Disease = this;
	}
	
	private void detach_Kids(Kid entity)
	{
		this.SendPropertyChanging();
		entity.Disease = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hospital")]
public partial class Hospital : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Hospital_ID;
	
	private string _HospitalName;
	
	private EntitySet<Kid> _Kids;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHospital_IDChanging(int value);
    partial void OnHospital_IDChanged();
    partial void OnHospitalNameChanging(string value);
    partial void OnHospitalNameChanged();
    #endregion
	
	public Hospital()
	{
		this._Kids = new EntitySet<Kid>(new Action<Kid>(this.attach_Kids), new Action<Kid>(this.detach_Kids));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hospital_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Hospital_ID
	{
		get
		{
			return this._Hospital_ID;
		}
		set
		{
			if ((this._Hospital_ID != value))
			{
				this.OnHospital_IDChanging(value);
				this.SendPropertyChanging();
				this._Hospital_ID = value;
				this.SendPropertyChanged("Hospital_ID");
				this.OnHospital_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalName", DbType="NVarChar(250)")]
	public string HospitalName
	{
		get
		{
			return this._HospitalName;
		}
		set
		{
			if ((this._HospitalName != value))
			{
				this.OnHospitalNameChanging(value);
				this.SendPropertyChanging();
				this._HospitalName = value;
				this.SendPropertyChanged("HospitalName");
				this.OnHospitalNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hospital_Kid", Storage="_Kids", ThisKey="Hospital_ID", OtherKey="Hospital_ID_FK")]
	public EntitySet<Kid> Kids
	{
		get
		{
			return this._Kids;
		}
		set
		{
			this._Kids.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Kids(Kid entity)
	{
		this.SendPropertyChanging();
		entity.Hospital = this;
	}
	
	private void detach_Kids(Kid entity)
	{
		this.SendPropertyChanging();
		entity.Hospital = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kid_Calls")]
public partial class Kid_Call : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Kid_Call_ID;
	
	private int _Kid_ID_FK;
	
	private string _Comment;
	
	private System.Nullable<System.Guid> _Caller_ID_FK;
	
	private System.Nullable<System.DateTime> _CallDate;
	
	private EntityRef<Kid> _Kid;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKid_Call_IDChanging(int value);
    partial void OnKid_Call_IDChanged();
    partial void OnKid_ID_FKChanging(int value);
    partial void OnKid_ID_FKChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCaller_ID_FKChanging(System.Nullable<System.Guid> value);
    partial void OnCaller_ID_FKChanged();
    partial void OnCallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCallDateChanged();
    #endregion
	
	public Kid_Call()
	{
		this._Kid = default(EntityRef<Kid>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kid_Call_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Kid_Call_ID
	{
		get
		{
			return this._Kid_Call_ID;
		}
		set
		{
			if ((this._Kid_Call_ID != value))
			{
				this.OnKid_Call_IDChanging(value);
				this.SendPropertyChanging();
				this._Kid_Call_ID = value;
				this.SendPropertyChanged("Kid_Call_ID");
				this.OnKid_Call_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kid_ID_FK", DbType="Int NOT NULL")]
	public int Kid_ID_FK
	{
		get
		{
			return this._Kid_ID_FK;
		}
		set
		{
			if ((this._Kid_ID_FK != value))
			{
				if (this._Kid.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnKid_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._Kid_ID_FK = value;
				this.SendPropertyChanged("Kid_ID_FK");
				this.OnKid_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(550)")]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caller_ID_FK", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> Caller_ID_FK
	{
		get
		{
			return this._Caller_ID_FK;
		}
		set
		{
			if ((this._Caller_ID_FK != value))
			{
				this.OnCaller_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._Caller_ID_FK = value;
				this.SendPropertyChanged("Caller_ID_FK");
				this.OnCaller_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallDate", DbType="Date")]
	public System.Nullable<System.DateTime> CallDate
	{
		get
		{
			return this._CallDate;
		}
		set
		{
			if ((this._CallDate != value))
			{
				this.OnCallDateChanging(value);
				this.SendPropertyChanging();
				this._CallDate = value;
				this.SendPropertyChanged("CallDate");
				this.OnCallDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kid_Kid_Call", Storage="_Kid", ThisKey="Kid_ID_FK", OtherKey="Kid_ID", IsForeignKey=true)]
	public Kid Kid
	{
		get
		{
			return this._Kid.Entity;
		}
		set
		{
			Kid previousValue = this._Kid.Entity;
			if (((previousValue != value) 
						|| (this._Kid.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Kid.Entity = null;
					previousValue.Kid_Calls.Remove(this);
				}
				this._Kid.Entity = value;
				if ((value != null))
				{
					value.Kid_Calls.Add(this);
					this._Kid_ID_FK = value.Kid_ID;
				}
				else
				{
					this._Kid_ID_FK = default(int);
				}
				this.SendPropertyChanged("Kid");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kid_Help")]
public partial class Kid_Help : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _HelpID;
	
	private System.Nullable<int> _Kid_ID_FK;
	
	private System.Nullable<int> _Amount;
	
	private System.Nullable<int> _HelpType_ID_FK;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _Notes;
	
	private EntityRef<Help_Type> _Help_Type;
	
	private EntityRef<Kid> _Kid;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHelpIDChanging(int value);
    partial void OnHelpIDChanged();
    partial void OnKid_ID_FKChanging(System.Nullable<int> value);
    partial void OnKid_ID_FKChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnHelpType_ID_FKChanging(System.Nullable<int> value);
    partial void OnHelpType_ID_FKChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
	
	public Kid_Help()
	{
		this._Help_Type = default(EntityRef<Help_Type>);
		this._Kid = default(EntityRef<Kid>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int HelpID
	{
		get
		{
			return this._HelpID;
		}
		set
		{
			if ((this._HelpID != value))
			{
				this.OnHelpIDChanging(value);
				this.SendPropertyChanging();
				this._HelpID = value;
				this.SendPropertyChanged("HelpID");
				this.OnHelpIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kid_ID_FK", DbType="Int")]
	public System.Nullable<int> Kid_ID_FK
	{
		get
		{
			return this._Kid_ID_FK;
		}
		set
		{
			if ((this._Kid_ID_FK != value))
			{
				if (this._Kid.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnKid_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._Kid_ID_FK = value;
				this.SendPropertyChanged("Kid_ID_FK");
				this.OnKid_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
	public System.Nullable<int> Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpType_ID_FK", DbType="Int")]
	public System.Nullable<int> HelpType_ID_FK
	{
		get
		{
			return this._HelpType_ID_FK;
		}
		set
		{
			if ((this._HelpType_ID_FK != value))
			{
				if (this._Help_Type.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnHelpType_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._HelpType_ID_FK = value;
				this.SendPropertyChanged("HelpType_ID_FK");
				this.OnHelpType_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(550)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Help_Type_Kid_Help", Storage="_Help_Type", ThisKey="HelpType_ID_FK", OtherKey="HelpTypeID", IsForeignKey=true)]
	public Help_Type Help_Type
	{
		get
		{
			return this._Help_Type.Entity;
		}
		set
		{
			Help_Type previousValue = this._Help_Type.Entity;
			if (((previousValue != value) 
						|| (this._Help_Type.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Help_Type.Entity = null;
					previousValue.Kid_Helps.Remove(this);
				}
				this._Help_Type.Entity = value;
				if ((value != null))
				{
					value.Kid_Helps.Add(this);
					this._HelpType_ID_FK = value.HelpTypeID;
				}
				else
				{
					this._HelpType_ID_FK = default(Nullable<int>);
				}
				this.SendPropertyChanged("Help_Type");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kid_Kid_Help", Storage="_Kid", ThisKey="Kid_ID_FK", OtherKey="Kid_ID", IsForeignKey=true)]
	public Kid Kid
	{
		get
		{
			return this._Kid.Entity;
		}
		set
		{
			Kid previousValue = this._Kid.Entity;
			if (((previousValue != value) 
						|| (this._Kid.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Kid.Entity = null;
					previousValue.Kid_Helps.Remove(this);
				}
				this._Kid.Entity = value;
				if ((value != null))
				{
					value.Kid_Helps.Add(this);
					this._Kid_ID_FK = value.Kid_ID;
				}
				else
				{
					this._Kid_ID_FK = default(Nullable<int>);
				}
				this.SendPropertyChanged("Kid");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Help_Type")]
public partial class Help_Type : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _HelpTypeID;
	
	private string _HelpName;
	
	private EntitySet<Kid_Help> _Kid_Helps;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHelpTypeIDChanging(int value);
    partial void OnHelpTypeIDChanged();
    partial void OnHelpNameChanging(string value);
    partial void OnHelpNameChanged();
    #endregion
	
	public Help_Type()
	{
		this._Kid_Helps = new EntitySet<Kid_Help>(new Action<Kid_Help>(this.attach_Kid_Helps), new Action<Kid_Help>(this.detach_Kid_Helps));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int HelpTypeID
	{
		get
		{
			return this._HelpTypeID;
		}
		set
		{
			if ((this._HelpTypeID != value))
			{
				this.OnHelpTypeIDChanging(value);
				this.SendPropertyChanging();
				this._HelpTypeID = value;
				this.SendPropertyChanged("HelpTypeID");
				this.OnHelpTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpName", DbType="NVarChar(250)")]
	public string HelpName
	{
		get
		{
			return this._HelpName;
		}
		set
		{
			if ((this._HelpName != value))
			{
				this.OnHelpNameChanging(value);
				this.SendPropertyChanging();
				this._HelpName = value;
				this.SendPropertyChanged("HelpName");
				this.OnHelpNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Help_Type_Kid_Help", Storage="_Kid_Helps", ThisKey="HelpTypeID", OtherKey="HelpType_ID_FK")]
	public EntitySet<Kid_Help> Kid_Helps
	{
		get
		{
			return this._Kid_Helps;
		}
		set
		{
			this._Kid_Helps.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Kid_Helps(Kid_Help entity)
	{
		this.SendPropertyChanging();
		entity.Help_Type = this;
	}
	
	private void detach_Kid_Helps(Kid_Help entity)
	{
		this.SendPropertyChanging();
		entity.Help_Type = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kid_Transfers")]
public partial class Kid_Transfer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _T_ID;
	
	private System.Nullable<int> _Hospital_ID_FK;
	
	private System.Nullable<int> _Kid_ID_FK;
	
	private System.Nullable<System.DateTime> _TransferDate;
	
	private string _Notes;
	
	private System.Nullable<int> _V_ID_FK;
	
	private EntityRef<Volunteer> _Volunteer;
	
	private EntityRef<Kid> _Kid;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnT_IDChanging(int value);
    partial void OnT_IDChanged();
    partial void OnHospital_ID_FKChanging(System.Nullable<int> value);
    partial void OnHospital_ID_FKChanged();
    partial void OnKid_ID_FKChanging(System.Nullable<int> value);
    partial void OnKid_ID_FKChanged();
    partial void OnTransferDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnV_ID_FKChanging(System.Nullable<int> value);
    partial void OnV_ID_FKChanged();
    #endregion
	
	public Kid_Transfer()
	{
		this._Volunteer = default(EntityRef<Volunteer>);
		this._Kid = default(EntityRef<Kid>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int T_ID
	{
		get
		{
			return this._T_ID;
		}
		set
		{
			if ((this._T_ID != value))
			{
				this.OnT_IDChanging(value);
				this.SendPropertyChanging();
				this._T_ID = value;
				this.SendPropertyChanged("T_ID");
				this.OnT_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hospital_ID_FK", DbType="Int")]
	public System.Nullable<int> Hospital_ID_FK
	{
		get
		{
			return this._Hospital_ID_FK;
		}
		set
		{
			if ((this._Hospital_ID_FK != value))
			{
				this.OnHospital_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._Hospital_ID_FK = value;
				this.SendPropertyChanged("Hospital_ID_FK");
				this.OnHospital_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kid_ID_FK", DbType="Int")]
	public System.Nullable<int> Kid_ID_FK
	{
		get
		{
			return this._Kid_ID_FK;
		}
		set
		{
			if ((this._Kid_ID_FK != value))
			{
				if (this._Kid.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnKid_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._Kid_ID_FK = value;
				this.SendPropertyChanged("Kid_ID_FK");
				this.OnKid_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDate", DbType="Date")]
	public System.Nullable<System.DateTime> TransferDate
	{
		get
		{
			return this._TransferDate;
		}
		set
		{
			if ((this._TransferDate != value))
			{
				this.OnTransferDateChanging(value);
				this.SendPropertyChanging();
				this._TransferDate = value;
				this.SendPropertyChanged("TransferDate");
				this.OnTransferDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_ID_FK", DbType="Int")]
	public System.Nullable<int> V_ID_FK
	{
		get
		{
			return this._V_ID_FK;
		}
		set
		{
			if ((this._V_ID_FK != value))
			{
				if (this._Volunteer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnV_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._V_ID_FK = value;
				this.SendPropertyChanged("V_ID_FK");
				this.OnV_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_Kid_Transfer", Storage="_Volunteer", ThisKey="V_ID_FK", OtherKey="V_ID", IsForeignKey=true)]
	public Volunteer Volunteer
	{
		get
		{
			return this._Volunteer.Entity;
		}
		set
		{
			Volunteer previousValue = this._Volunteer.Entity;
			if (((previousValue != value) 
						|| (this._Volunteer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Volunteer.Entity = null;
					previousValue.Kid_Transfers.Remove(this);
				}
				this._Volunteer.Entity = value;
				if ((value != null))
				{
					value.Kid_Transfers.Add(this);
					this._V_ID_FK = value.V_ID;
				}
				else
				{
					this._V_ID_FK = default(Nullable<int>);
				}
				this.SendPropertyChanged("Volunteer");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kid_Kid_Transfer", Storage="_Kid", ThisKey="Kid_ID_FK", OtherKey="Kid_ID", IsForeignKey=true)]
	public Kid Kid
	{
		get
		{
			return this._Kid.Entity;
		}
		set
		{
			Kid previousValue = this._Kid.Entity;
			if (((previousValue != value) 
						|| (this._Kid.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Kid.Entity = null;
					previousValue.Kid_Transfers.Remove(this);
				}
				this._Kid.Entity = value;
				if ((value != null))
				{
					value.Kid_Transfers.Add(this);
					this._Kid_ID_FK = value.Kid_ID;
				}
				else
				{
					this._Kid_ID_FK = default(Nullable<int>);
				}
				this.SendPropertyChanged("Kid");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Governerates")]
public partial class Governerate : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _GovID;
	
	private string _GovernerateName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGovIDChanging(int value);
    partial void OnGovIDChanged();
    partial void OnGovernerateNameChanging(string value);
    partial void OnGovernerateNameChanged();
    #endregion
	
	public Governerate()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int GovID
	{
		get
		{
			return this._GovID;
		}
		set
		{
			if ((this._GovID != value))
			{
				this.OnGovIDChanging(value);
				this.SendPropertyChanging();
				this._GovID = value;
				this.SendPropertyChanged("GovID");
				this.OnGovIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernerateName", DbType="NVarChar(50)")]
	public string GovernerateName
	{
		get
		{
			return this._GovernerateName;
		}
		set
		{
			if ((this._GovernerateName != value))
			{
				this.OnGovernerateNameChanging(value);
				this.SendPropertyChanging();
				this._GovernerateName = value;
				this.SendPropertyChanged("GovernerateName");
				this.OnGovernerateNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Volunteer_Kid")]
public partial class Volunteer_Kid : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _VK_ID;
	
	private int _V_ID_FK;
	
	private int _K_ID_FK;
	
	private EntityRef<Volunteer> _Volunteer;
	
	private EntityRef<Kid> _Kid;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVK_IDChanging(int value);
    partial void OnVK_IDChanged();
    partial void OnV_ID_FKChanging(int value);
    partial void OnV_ID_FKChanged();
    partial void OnK_ID_FKChanging(int value);
    partial void OnK_ID_FKChanged();
    #endregion
	
	public Volunteer_Kid()
	{
		this._Volunteer = default(EntityRef<Volunteer>);
		this._Kid = default(EntityRef<Kid>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VK_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int VK_ID
	{
		get
		{
			return this._VK_ID;
		}
		set
		{
			if ((this._VK_ID != value))
			{
				this.OnVK_IDChanging(value);
				this.SendPropertyChanging();
				this._VK_ID = value;
				this.SendPropertyChanged("VK_ID");
				this.OnVK_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_ID_FK", DbType="Int NOT NULL")]
	public int V_ID_FK
	{
		get
		{
			return this._V_ID_FK;
		}
		set
		{
			if ((this._V_ID_FK != value))
			{
				if (this._Volunteer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnV_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._V_ID_FK = value;
				this.SendPropertyChanged("V_ID_FK");
				this.OnV_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K_ID_FK", DbType="Int NOT NULL")]
	public int K_ID_FK
	{
		get
		{
			return this._K_ID_FK;
		}
		set
		{
			if ((this._K_ID_FK != value))
			{
				if (this._Kid.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnK_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._K_ID_FK = value;
				this.SendPropertyChanged("K_ID_FK");
				this.OnK_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_Volunteer_Kid", Storage="_Volunteer", ThisKey="V_ID_FK", OtherKey="V_ID", IsForeignKey=true)]
	public Volunteer Volunteer
	{
		get
		{
			return this._Volunteer.Entity;
		}
		set
		{
			Volunteer previousValue = this._Volunteer.Entity;
			if (((previousValue != value) 
						|| (this._Volunteer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Volunteer.Entity = null;
					previousValue.Volunteer_Kids.Remove(this);
				}
				this._Volunteer.Entity = value;
				if ((value != null))
				{
					value.Volunteer_Kids.Add(this);
					this._V_ID_FK = value.V_ID;
				}
				else
				{
					this._V_ID_FK = default(int);
				}
				this.SendPropertyChanged("Volunteer");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kid_Volunteer_Kid", Storage="_Kid", ThisKey="K_ID_FK", OtherKey="Kid_ID", IsForeignKey=true)]
	public Kid Kid
	{
		get
		{
			return this._Kid.Entity;
		}
		set
		{
			Kid previousValue = this._Kid.Entity;
			if (((previousValue != value) 
						|| (this._Kid.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Kid.Entity = null;
					previousValue.Volunteer_Kids.Remove(this);
				}
				this._Kid.Entity = value;
				if ((value != null))
				{
					value.Volunteer_Kids.Add(this);
					this._K_ID_FK = value.Kid_ID;
				}
				else
				{
					this._K_ID_FK = default(int);
				}
				this.SendPropertyChanged("Kid");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HearAboutUs")]
public partial class HearAboutUs : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _HearID;
	
	private string _HearName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHearIDChanging(int value);
    partial void OnHearIDChanged();
    partial void OnHearNameChanging(string value);
    partial void OnHearNameChanged();
    #endregion
	
	public HearAboutUs()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HearID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int HearID
	{
		get
		{
			return this._HearID;
		}
		set
		{
			if ((this._HearID != value))
			{
				this.OnHearIDChanging(value);
				this.SendPropertyChanging();
				this._HearID = value;
				this.SendPropertyChanged("HearID");
				this.OnHearIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HearName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string HearName
	{
		get
		{
			return this._HearName;
		}
		set
		{
			if ((this._HearName != value))
			{
				this.OnHearNameChanging(value);
				this.SendPropertyChanging();
				this._HearName = value;
				this.SendPropertyChanged("HearName");
				this.OnHearNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Volunteer")]
public partial class Volunteer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _V_ID;
	
	private string _IDNo;
	
	private string _Name;
	
	private string _Phone;
	
	private string _Mobile1;
	
	private string _Mobile2;
	
	private string _Email1;
	
	private string _Email2;
	
	private string _BloodType;
	
	private System.Nullable<int> _TerritoryID;
	
	private System.Nullable<int> _Job_ID;
	
	private string _Gender;
	
	private string _MobileNetwork1;
	
	private string _MobileNetwork2;
	
	private string _Notes;
	
	private string _BirthYear;
	
	private System.Nullable<int> _HearedAboutUs;
	
	private string _Evaluation;
	
	private string _Platelet;
	
	private string _NotAvailable;
	
	private System.Nullable<System.DateTime> _AvailabilityDate;
	
	private System.Nullable<System.DateTime> _LastDonationDate;
	
	private System.Nullable<System.DateTime> _LastCallDate;
	
	private System.Nullable<int> _BranchID;
	
	private System.Nullable<bool> _Deleted;
	
	private string _JobDetails;
	
	private System.Nullable<System.DateTime> _InsertionDate;
	
	private string _Comments;
	
	private System.Nullable<System.DateTime> _HoldDate;
	
	private System.Nullable<bool> _InActive;
	
	private System.Nullable<int> _Place_ID;
	
	private System.Nullable<bool> _Ready;
	
	private System.Nullable<System.DateTime> _CallDate;
	
	private System.Nullable<System.DateTime> _ActivationDate;
	
	private System.Nullable<int> _CallPoints;
	
	private System.Nullable<int> _DonationPoints;
	
	private System.Nullable<int> _FavoritePlacePoints;
	
	private string _ABO;
	
	private string _RH;
	
	private string _c_;
	
	private string _C;
	
	private string _E;
	
	private string _e_;
	
	private string _Kell;
	
	private string _Kafala;
	
	private System.Nullable<bool> _Mobile1_W;
	
	private System.Nullable<bool> _Mobile2_W;
	
	private EntitySet<VolunteerCall> _VolunteerCalls;
	
	private EntitySet<VolunteerHistory> _VolunteerHistories;
	
	private EntitySet<Kid_Transfer> _Kid_Transfers;
	
	private EntitySet<Volunteer_Kid> _Volunteer_Kids;
	
	private EntityRef<Job> _Job;
	
	private EntityRef<Territory> _Territory;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnV_IDChanging(int value);
    partial void OnV_IDChanged();
    partial void OnIDNoChanging(string value);
    partial void OnIDNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobile1Changing(string value);
    partial void OnMobile1Changed();
    partial void OnMobile2Changing(string value);
    partial void OnMobile2Changed();
    partial void OnEmail1Changing(string value);
    partial void OnEmail1Changed();
    partial void OnEmail2Changing(string value);
    partial void OnEmail2Changed();
    partial void OnBloodTypeChanging(string value);
    partial void OnBloodTypeChanged();
    partial void OnTerritoryIDChanging(System.Nullable<int> value);
    partial void OnTerritoryIDChanged();
    partial void OnJob_IDChanging(System.Nullable<int> value);
    partial void OnJob_IDChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnMobileNetwork1Changing(string value);
    partial void OnMobileNetwork1Changed();
    partial void OnMobileNetwork2Changing(string value);
    partial void OnMobileNetwork2Changed();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnBirthYearChanging(string value);
    partial void OnBirthYearChanged();
    partial void OnHearedAboutUsChanging(System.Nullable<int> value);
    partial void OnHearedAboutUsChanged();
    partial void OnEvaluationChanging(string value);
    partial void OnEvaluationChanged();
    partial void OnPlateletChanging(string value);
    partial void OnPlateletChanged();
    partial void OnNotAvailableChanging(string value);
    partial void OnNotAvailableChanged();
    partial void OnAvailabilityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAvailabilityDateChanged();
    partial void OnLastDonationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDonationDateChanged();
    partial void OnLastCallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCallDateChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnJobDetailsChanging(string value);
    partial void OnJobDetailsChanged();
    partial void OnInsertionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertionDateChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnHoldDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHoldDateChanged();
    partial void OnInActiveChanging(System.Nullable<bool> value);
    partial void OnInActiveChanged();
    partial void OnPlace_IDChanging(System.Nullable<int> value);
    partial void OnPlace_IDChanged();
    partial void OnReadyChanging(System.Nullable<bool> value);
    partial void OnReadyChanged();
    partial void OnCallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCallDateChanged();
    partial void OnActivationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActivationDateChanged();
    partial void OnCallPointsChanging(System.Nullable<int> value);
    partial void OnCallPointsChanged();
    partial void OnDonationPointsChanging(System.Nullable<int> value);
    partial void OnDonationPointsChanged();
    partial void OnFavoritePlacePointsChanging(System.Nullable<int> value);
    partial void OnFavoritePlacePointsChanged();
    partial void OnABOChanging(string value);
    partial void OnABOChanged();
    partial void OnRHChanging(string value);
    partial void OnRHChanged();
    partial void Onc_Changing(string value);
    partial void Onc_Changed();
    partial void OnCChanging(string value);
    partial void OnCChanged();
    partial void OnEChanging(string value);
    partial void OnEChanged();
    partial void One_Changing(string value);
    partial void One_Changed();
    partial void OnKellChanging(string value);
    partial void OnKellChanged();
    partial void OnKafalaChanging(string value);
    partial void OnKafalaChanged();
    partial void OnMobile1_WChanging(System.Nullable<bool> value);
    partial void OnMobile1_WChanged();
    partial void OnMobile2_WChanging(System.Nullable<bool> value);
    partial void OnMobile2_WChanged();
    #endregion
	
	public Volunteer()
	{
		this._VolunteerCalls = new EntitySet<VolunteerCall>(new Action<VolunteerCall>(this.attach_VolunteerCalls), new Action<VolunteerCall>(this.detach_VolunteerCalls));
		this._VolunteerHistories = new EntitySet<VolunteerHistory>(new Action<VolunteerHistory>(this.attach_VolunteerHistories), new Action<VolunteerHistory>(this.detach_VolunteerHistories));
		this._Kid_Transfers = new EntitySet<Kid_Transfer>(new Action<Kid_Transfer>(this.attach_Kid_Transfers), new Action<Kid_Transfer>(this.detach_Kid_Transfers));
		this._Volunteer_Kids = new EntitySet<Volunteer_Kid>(new Action<Volunteer_Kid>(this.attach_Volunteer_Kids), new Action<Volunteer_Kid>(this.detach_Volunteer_Kids));
		this._Job = default(EntityRef<Job>);
		this._Territory = default(EntityRef<Territory>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int V_ID
	{
		get
		{
			return this._V_ID;
		}
		set
		{
			if ((this._V_ID != value))
			{
				this.OnV_IDChanging(value);
				this.SendPropertyChanging();
				this._V_ID = value;
				this.SendPropertyChanged("V_ID");
				this.OnV_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNo", DbType="NVarChar(15)")]
	public string IDNo
	{
		get
		{
			return this._IDNo;
		}
		set
		{
			if ((this._IDNo != value))
			{
				this.OnIDNoChanging(value);
				this.SendPropertyChanging();
				this._IDNo = value;
				this.SendPropertyChanged("IDNo");
				this.OnIDNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile1", DbType="NVarChar(20)")]
	public string Mobile1
	{
		get
		{
			return this._Mobile1;
		}
		set
		{
			if ((this._Mobile1 != value))
			{
				this.OnMobile1Changing(value);
				this.SendPropertyChanging();
				this._Mobile1 = value;
				this.SendPropertyChanged("Mobile1");
				this.OnMobile1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile2", DbType="NVarChar(20)")]
	public string Mobile2
	{
		get
		{
			return this._Mobile2;
		}
		set
		{
			if ((this._Mobile2 != value))
			{
				this.OnMobile2Changing(value);
				this.SendPropertyChanging();
				this._Mobile2 = value;
				this.SendPropertyChanged("Mobile2");
				this.OnMobile2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email1", DbType="NVarChar(150)")]
	public string Email1
	{
		get
		{
			return this._Email1;
		}
		set
		{
			if ((this._Email1 != value))
			{
				this.OnEmail1Changing(value);
				this.SendPropertyChanging();
				this._Email1 = value;
				this.SendPropertyChanged("Email1");
				this.OnEmail1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email2", DbType="NVarChar(150)")]
	public string Email2
	{
		get
		{
			return this._Email2;
		}
		set
		{
			if ((this._Email2 != value))
			{
				this.OnEmail2Changing(value);
				this.SendPropertyChanging();
				this._Email2 = value;
				this.SendPropertyChanged("Email2");
				this.OnEmail2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="NVarChar(1)")]
	public string BloodType
	{
		get
		{
			return this._BloodType;
		}
		set
		{
			if ((this._BloodType != value))
			{
				this.OnBloodTypeChanging(value);
				this.SendPropertyChanging();
				this._BloodType = value;
				this.SendPropertyChanged("BloodType");
				this.OnBloodTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryID", DbType="Int")]
	public System.Nullable<int> TerritoryID
	{
		get
		{
			return this._TerritoryID;
		}
		set
		{
			if ((this._TerritoryID != value))
			{
				if (this._Territory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTerritoryIDChanging(value);
				this.SendPropertyChanging();
				this._TerritoryID = value;
				this.SendPropertyChanged("TerritoryID");
				this.OnTerritoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job_ID", DbType="Int")]
	public System.Nullable<int> Job_ID
	{
		get
		{
			return this._Job_ID;
		}
		set
		{
			if ((this._Job_ID != value))
			{
				if (this._Job.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnJob_IDChanging(value);
				this.SendPropertyChanging();
				this._Job_ID = value;
				this.SendPropertyChanged("Job_ID");
				this.OnJob_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(1)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNetwork1", DbType="NVarChar(1)")]
	public string MobileNetwork1
	{
		get
		{
			return this._MobileNetwork1;
		}
		set
		{
			if ((this._MobileNetwork1 != value))
			{
				this.OnMobileNetwork1Changing(value);
				this.SendPropertyChanging();
				this._MobileNetwork1 = value;
				this.SendPropertyChanged("MobileNetwork1");
				this.OnMobileNetwork1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNetwork2", DbType="NVarChar(1)")]
	public string MobileNetwork2
	{
		get
		{
			return this._MobileNetwork2;
		}
		set
		{
			if ((this._MobileNetwork2 != value))
			{
				this.OnMobileNetwork2Changing(value);
				this.SendPropertyChanging();
				this._MobileNetwork2 = value;
				this.SendPropertyChanged("MobileNetwork2");
				this.OnMobileNetwork2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthYear", DbType="NVarChar(5)")]
	public string BirthYear
	{
		get
		{
			return this._BirthYear;
		}
		set
		{
			if ((this._BirthYear != value))
			{
				this.OnBirthYearChanging(value);
				this.SendPropertyChanging();
				this._BirthYear = value;
				this.SendPropertyChanged("BirthYear");
				this.OnBirthYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HearedAboutUs", DbType="Int")]
	public System.Nullable<int> HearedAboutUs
	{
		get
		{
			return this._HearedAboutUs;
		}
		set
		{
			if ((this._HearedAboutUs != value))
			{
				this.OnHearedAboutUsChanging(value);
				this.SendPropertyChanging();
				this._HearedAboutUs = value;
				this.SendPropertyChanged("HearedAboutUs");
				this.OnHearedAboutUsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Evaluation", DbType="NVarChar(1)")]
	public string Evaluation
	{
		get
		{
			return this._Evaluation;
		}
		set
		{
			if ((this._Evaluation != value))
			{
				this.OnEvaluationChanging(value);
				this.SendPropertyChanging();
				this._Evaluation = value;
				this.SendPropertyChanged("Evaluation");
				this.OnEvaluationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platelet", DbType="NVarChar(1)")]
	public string Platelet
	{
		get
		{
			return this._Platelet;
		}
		set
		{
			if ((this._Platelet != value))
			{
				this.OnPlateletChanging(value);
				this.SendPropertyChanging();
				this._Platelet = value;
				this.SendPropertyChanged("Platelet");
				this.OnPlateletChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotAvailable", DbType="NVarChar(1)")]
	public string NotAvailable
	{
		get
		{
			return this._NotAvailable;
		}
		set
		{
			if ((this._NotAvailable != value))
			{
				this.OnNotAvailableChanging(value);
				this.SendPropertyChanging();
				this._NotAvailable = value;
				this.SendPropertyChanged("NotAvailable");
				this.OnNotAvailableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailabilityDate", DbType="Date")]
	public System.Nullable<System.DateTime> AvailabilityDate
	{
		get
		{
			return this._AvailabilityDate;
		}
		set
		{
			if ((this._AvailabilityDate != value))
			{
				this.OnAvailabilityDateChanging(value);
				this.SendPropertyChanging();
				this._AvailabilityDate = value;
				this.SendPropertyChanged("AvailabilityDate");
				this.OnAvailabilityDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDonationDate", DbType="Date")]
	public System.Nullable<System.DateTime> LastDonationDate
	{
		get
		{
			return this._LastDonationDate;
		}
		set
		{
			if ((this._LastDonationDate != value))
			{
				this.OnLastDonationDateChanging(value);
				this.SendPropertyChanging();
				this._LastDonationDate = value;
				this.SendPropertyChanged("LastDonationDate");
				this.OnLastDonationDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCallDate", DbType="Date")]
	public System.Nullable<System.DateTime> LastCallDate
	{
		get
		{
			return this._LastCallDate;
		}
		set
		{
			if ((this._LastCallDate != value))
			{
				this.OnLastCallDateChanging(value);
				this.SendPropertyChanging();
				this._LastCallDate = value;
				this.SendPropertyChanged("LastCallDate");
				this.OnLastCallDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
	public System.Nullable<int> BranchID
	{
		get
		{
			return this._BranchID;
		}
		set
		{
			if ((this._BranchID != value))
			{
				this.OnBranchIDChanging(value);
				this.SendPropertyChanging();
				this._BranchID = value;
				this.SendPropertyChanged("BranchID");
				this.OnBranchIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
	public System.Nullable<bool> Deleted
	{
		get
		{
			return this._Deleted;
		}
		set
		{
			if ((this._Deleted != value))
			{
				this.OnDeletedChanging(value);
				this.SendPropertyChanging();
				this._Deleted = value;
				this.SendPropertyChanged("Deleted");
				this.OnDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDetails", DbType="NVarChar(MAX)")]
	public string JobDetails
	{
		get
		{
			return this._JobDetails;
		}
		set
		{
			if ((this._JobDetails != value))
			{
				this.OnJobDetailsChanging(value);
				this.SendPropertyChanging();
				this._JobDetails = value;
				this.SendPropertyChanged("JobDetails");
				this.OnJobDetailsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertionDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertionDate
	{
		get
		{
			return this._InsertionDate;
		}
		set
		{
			if ((this._InsertionDate != value))
			{
				this.OnInsertionDateChanging(value);
				this.SendPropertyChanging();
				this._InsertionDate = value;
				this.SendPropertyChanged("InsertionDate");
				this.OnInsertionDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
	public string Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			if ((this._Comments != value))
			{
				this.OnCommentsChanging(value);
				this.SendPropertyChanging();
				this._Comments = value;
				this.SendPropertyChanged("Comments");
				this.OnCommentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoldDate", DbType="Date")]
	public System.Nullable<System.DateTime> HoldDate
	{
		get
		{
			return this._HoldDate;
		}
		set
		{
			if ((this._HoldDate != value))
			{
				this.OnHoldDateChanging(value);
				this.SendPropertyChanging();
				this._HoldDate = value;
				this.SendPropertyChanged("HoldDate");
				this.OnHoldDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InActive", DbType="Bit")]
	public System.Nullable<bool> InActive
	{
		get
		{
			return this._InActive;
		}
		set
		{
			if ((this._InActive != value))
			{
				this.OnInActiveChanging(value);
				this.SendPropertyChanging();
				this._InActive = value;
				this.SendPropertyChanged("InActive");
				this.OnInActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place_ID", DbType="Int")]
	public System.Nullable<int> Place_ID
	{
		get
		{
			return this._Place_ID;
		}
		set
		{
			if ((this._Place_ID != value))
			{
				this.OnPlace_IDChanging(value);
				this.SendPropertyChanging();
				this._Place_ID = value;
				this.SendPropertyChanged("Place_ID");
				this.OnPlace_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ready", DbType="Bit")]
	public System.Nullable<bool> Ready
	{
		get
		{
			return this._Ready;
		}
		set
		{
			if ((this._Ready != value))
			{
				this.OnReadyChanging(value);
				this.SendPropertyChanging();
				this._Ready = value;
				this.SendPropertyChanged("Ready");
				this.OnReadyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallDate", DbType="Date")]
	public System.Nullable<System.DateTime> CallDate
	{
		get
		{
			return this._CallDate;
		}
		set
		{
			if ((this._CallDate != value))
			{
				this.OnCallDateChanging(value);
				this.SendPropertyChanging();
				this._CallDate = value;
				this.SendPropertyChanged("CallDate");
				this.OnCallDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationDate", DbType="Date")]
	public System.Nullable<System.DateTime> ActivationDate
	{
		get
		{
			return this._ActivationDate;
		}
		set
		{
			if ((this._ActivationDate != value))
			{
				this.OnActivationDateChanging(value);
				this.SendPropertyChanging();
				this._ActivationDate = value;
				this.SendPropertyChanged("ActivationDate");
				this.OnActivationDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallPoints", DbType="Int")]
	public System.Nullable<int> CallPoints
	{
		get
		{
			return this._CallPoints;
		}
		set
		{
			if ((this._CallPoints != value))
			{
				this.OnCallPointsChanging(value);
				this.SendPropertyChanging();
				this._CallPoints = value;
				this.SendPropertyChanged("CallPoints");
				this.OnCallPointsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationPoints", DbType="Int")]
	public System.Nullable<int> DonationPoints
	{
		get
		{
			return this._DonationPoints;
		}
		set
		{
			if ((this._DonationPoints != value))
			{
				this.OnDonationPointsChanging(value);
				this.SendPropertyChanging();
				this._DonationPoints = value;
				this.SendPropertyChanged("DonationPoints");
				this.OnDonationPointsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavoritePlacePoints", DbType="Int")]
	public System.Nullable<int> FavoritePlacePoints
	{
		get
		{
			return this._FavoritePlacePoints;
		}
		set
		{
			if ((this._FavoritePlacePoints != value))
			{
				this.OnFavoritePlacePointsChanging(value);
				this.SendPropertyChanging();
				this._FavoritePlacePoints = value;
				this.SendPropertyChanged("FavoritePlacePoints");
				this.OnFavoritePlacePointsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABO", DbType="NVarChar(3)")]
	public string ABO
	{
		get
		{
			return this._ABO;
		}
		set
		{
			if ((this._ABO != value))
			{
				this.OnABOChanging(value);
				this.SendPropertyChanging();
				this._ABO = value;
				this.SendPropertyChanged("ABO");
				this.OnABOChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RH", DbType="NVarChar(1)")]
	public string RH
	{
		get
		{
			return this._RH;
		}
		set
		{
			if ((this._RH != value))
			{
				this.OnRHChanging(value);
				this.SendPropertyChanging();
				this._RH = value;
				this.SendPropertyChanged("RH");
				this.OnRHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_", DbType="NVarChar(1)")]
	public string c_
	{
		get
		{
			return this._c_;
		}
		set
		{
			if ((this._c_ != value))
			{
				this.Onc_Changing(value);
				this.SendPropertyChanging();
				this._c_ = value;
				this.SendPropertyChanged("c_");
				this.Onc_Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="NVarChar(1)")]
	public string C
	{
		get
		{
			return this._C;
		}
		set
		{
			if ((this._C != value))
			{
				this.OnCChanging(value);
				this.SendPropertyChanging();
				this._C = value;
				this.SendPropertyChanged("C");
				this.OnCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E", DbType="NVarChar(1)")]
	public string E
	{
		get
		{
			return this._E;
		}
		set
		{
			if ((this._E != value))
			{
				this.OnEChanging(value);
				this.SendPropertyChanging();
				this._E = value;
				this.SendPropertyChanged("E");
				this.OnEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_", DbType="NVarChar(1)")]
	public string e_
	{
		get
		{
			return this._e_;
		}
		set
		{
			if ((this._e_ != value))
			{
				this.One_Changing(value);
				this.SendPropertyChanging();
				this._e_ = value;
				this.SendPropertyChanged("e_");
				this.One_Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kell", DbType="NVarChar(1)")]
	public string Kell
	{
		get
		{
			return this._Kell;
		}
		set
		{
			if ((this._Kell != value))
			{
				this.OnKellChanging(value);
				this.SendPropertyChanging();
				this._Kell = value;
				this.SendPropertyChanged("Kell");
				this.OnKellChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kafala", DbType="NVarChar(1)")]
	public string Kafala
	{
		get
		{
			return this._Kafala;
		}
		set
		{
			if ((this._Kafala != value))
			{
				this.OnKafalaChanging(value);
				this.SendPropertyChanging();
				this._Kafala = value;
				this.SendPropertyChanged("Kafala");
				this.OnKafalaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile1_W", DbType="Bit")]
	public System.Nullable<bool> Mobile1_W
	{
		get
		{
			return this._Mobile1_W;
		}
		set
		{
			if ((this._Mobile1_W != value))
			{
				this.OnMobile1_WChanging(value);
				this.SendPropertyChanging();
				this._Mobile1_W = value;
				this.SendPropertyChanged("Mobile1_W");
				this.OnMobile1_WChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile2_W", DbType="Bit")]
	public System.Nullable<bool> Mobile2_W
	{
		get
		{
			return this._Mobile2_W;
		}
		set
		{
			if ((this._Mobile2_W != value))
			{
				this.OnMobile2_WChanging(value);
				this.SendPropertyChanging();
				this._Mobile2_W = value;
				this.SendPropertyChanged("Mobile2_W");
				this.OnMobile2_WChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_VolunteerCall", Storage="_VolunteerCalls", ThisKey="V_ID", OtherKey="VolunteerID")]
	public EntitySet<VolunteerCall> VolunteerCalls
	{
		get
		{
			return this._VolunteerCalls;
		}
		set
		{
			this._VolunteerCalls.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_VolunteerHistory", Storage="_VolunteerHistories", ThisKey="V_ID", OtherKey="Volunteer_ID")]
	public EntitySet<VolunteerHistory> VolunteerHistories
	{
		get
		{
			return this._VolunteerHistories;
		}
		set
		{
			this._VolunteerHistories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_Kid_Transfer", Storage="_Kid_Transfers", ThisKey="V_ID", OtherKey="V_ID_FK")]
	public EntitySet<Kid_Transfer> Kid_Transfers
	{
		get
		{
			return this._Kid_Transfers;
		}
		set
		{
			this._Kid_Transfers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_Volunteer_Kid", Storage="_Volunteer_Kids", ThisKey="V_ID", OtherKey="V_ID_FK")]
	public EntitySet<Volunteer_Kid> Volunteer_Kids
	{
		get
		{
			return this._Volunteer_Kids;
		}
		set
		{
			this._Volunteer_Kids.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Volunteer", Storage="_Job", ThisKey="Job_ID", OtherKey="JobID", IsForeignKey=true)]
	public Job Job
	{
		get
		{
			return this._Job.Entity;
		}
		set
		{
			Job previousValue = this._Job.Entity;
			if (((previousValue != value) 
						|| (this._Job.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Job.Entity = null;
					previousValue.Volunteers.Remove(this);
				}
				this._Job.Entity = value;
				if ((value != null))
				{
					value.Volunteers.Add(this);
					this._Job_ID = value.JobID;
				}
				else
				{
					this._Job_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Job");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Territory_Volunteer", Storage="_Territory", ThisKey="TerritoryID", OtherKey="TerritoryID", IsForeignKey=true)]
	public Territory Territory
	{
		get
		{
			return this._Territory.Entity;
		}
		set
		{
			Territory previousValue = this._Territory.Entity;
			if (((previousValue != value) 
						|| (this._Territory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Territory.Entity = null;
					previousValue.Volunteers.Remove(this);
				}
				this._Territory.Entity = value;
				if ((value != null))
				{
					value.Volunteers.Add(this);
					this._TerritoryID = value.TerritoryID;
				}
				else
				{
					this._TerritoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Territory");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_VolunteerCalls(VolunteerCall entity)
	{
		this.SendPropertyChanging();
		entity.Volunteer = this;
	}
	
	private void detach_VolunteerCalls(VolunteerCall entity)
	{
		this.SendPropertyChanging();
		entity.Volunteer = null;
	}
	
	private void attach_VolunteerHistories(VolunteerHistory entity)
	{
		this.SendPropertyChanging();
		entity.Volunteer = this;
	}
	
	private void detach_VolunteerHistories(VolunteerHistory entity)
	{
		this.SendPropertyChanging();
		entity.Volunteer = null;
	}
	
	private void attach_Kid_Transfers(Kid_Transfer entity)
	{
		this.SendPropertyChanging();
		entity.Volunteer = this;
	}
	
	private void detach_Kid_Transfers(Kid_Transfer entity)
	{
		this.SendPropertyChanging();
		entity.Volunteer = null;
	}
	
	private void attach_Volunteer_Kids(Volunteer_Kid entity)
	{
		this.SendPropertyChanging();
		entity.Volunteer = this;
	}
	
	private void detach_Volunteer_Kids(Volunteer_Kid entity)
	{
		this.SendPropertyChanging();
		entity.Volunteer = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kid")]
public partial class Kid : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Kid_ID;
	
	private System.DateTime _CreationDate;
	
	private string _KidName;
	
	private string _KidGender;
	
	private string _Status;
	
	private string _KidMobile1;
	
	private System.Nullable<bool> _KidMobile1_W;
	
	private string _KidMobile2;
	
	private System.Nullable<bool> _KidMobile2_W;
	
	private string _FatherMobile1;
	
	private System.Nullable<bool> _FatherMobile1_W;
	
	private string _FatherMobile2;
	
	private System.Nullable<bool> _FatherMobile2_W;
	
	private string _MotherMobile1;
	
	private System.Nullable<bool> _MotherMobile1_W;
	
	private string _MotherMobile2;
	
	private System.Nullable<bool> _MotherMobile2_W;
	
	private string _IDNo;
	
	private System.Nullable<System.DateTime> _BirthDate;
	
	private string _Notes;
	
	private System.Nullable<int> _Disease_ID_FK;
	
	private string _DiseaseDetails;
	
	private System.Nullable<int> _Hospital_ID_FK;
	
	private string _DeactivationReason;
	
	private System.Nullable<bool> _Insurance;
	
	private string _InsuranceNo;
	
	private string _ABO;
	
	private string _RH;
	
	private string _c_;
	
	private string _C;
	
	private string _e_;
	
	private string _E;
	
	private string _Kell;
	
	private System.Nullable<int> _No_Bloodbags;
	
	private System.Nullable<System.DateTime> _LastDate_Received_Blood;
	
	private System.Nullable<System.DateTime> _NextExpectedBloodNeed;
	
	private System.Nullable<bool> _Deleted;
	
	private System.Nullable<int> _Territory_ID_FK;
	
	private System.Nullable<int> _CallPoints;
	
	private System.Nullable<System.DateTime> _LastCall_Date;
	
	private System.Nullable<int> _TransferDays;
	
	private System.Nullable<int> _Father_Job_ID_FK;
	
	private System.Nullable<int> _Mother_Job_ID_FK;
	
	private string _Phone;
	
	private string _AdressDetails;
	
	private EntitySet<Kid_Call> _Kid_Calls;
	
	private EntitySet<Kid_Help> _Kid_Helps;
	
	private EntitySet<Kid_Transfer> _Kid_Transfers;
	
	private EntitySet<Volunteer_Kid> _Volunteer_Kids;
	
	private EntityRef<Disease> _Disease;
	
	private EntityRef<Hospital> _Hospital;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKid_IDChanging(int value);
    partial void OnKid_IDChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnKidNameChanging(string value);
    partial void OnKidNameChanged();
    partial void OnKidGenderChanging(string value);
    partial void OnKidGenderChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnKidMobile1Changing(string value);
    partial void OnKidMobile1Changed();
    partial void OnKidMobile1_WChanging(System.Nullable<bool> value);
    partial void OnKidMobile1_WChanged();
    partial void OnKidMobile2Changing(string value);
    partial void OnKidMobile2Changed();
    partial void OnKidMobile2_WChanging(System.Nullable<bool> value);
    partial void OnKidMobile2_WChanged();
    partial void OnFatherMobile1Changing(string value);
    partial void OnFatherMobile1Changed();
    partial void OnFatherMobile1_WChanging(System.Nullable<bool> value);
    partial void OnFatherMobile1_WChanged();
    partial void OnFatherMobile2Changing(string value);
    partial void OnFatherMobile2Changed();
    partial void OnFatherMobile2_WChanging(System.Nullable<bool> value);
    partial void OnFatherMobile2_WChanged();
    partial void OnMotherMobile1Changing(string value);
    partial void OnMotherMobile1Changed();
    partial void OnMotherMobile1_WChanging(System.Nullable<bool> value);
    partial void OnMotherMobile1_WChanged();
    partial void OnMotherMobile2Changing(string value);
    partial void OnMotherMobile2Changed();
    partial void OnMotherMobile2_WChanging(System.Nullable<bool> value);
    partial void OnMotherMobile2_WChanged();
    partial void OnIDNoChanging(string value);
    partial void OnIDNoChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDisease_ID_FKChanging(System.Nullable<int> value);
    partial void OnDisease_ID_FKChanged();
    partial void OnDiseaseDetailsChanging(string value);
    partial void OnDiseaseDetailsChanged();
    partial void OnHospital_ID_FKChanging(System.Nullable<int> value);
    partial void OnHospital_ID_FKChanged();
    partial void OnDeactivationReasonChanging(string value);
    partial void OnDeactivationReasonChanged();
    partial void OnInsuranceChanging(System.Nullable<bool> value);
    partial void OnInsuranceChanged();
    partial void OnInsuranceNoChanging(string value);
    partial void OnInsuranceNoChanged();
    partial void OnABOChanging(string value);
    partial void OnABOChanged();
    partial void OnRHChanging(string value);
    partial void OnRHChanged();
    partial void Onc_Changing(string value);
    partial void Onc_Changed();
    partial void OnCChanging(string value);
    partial void OnCChanged();
    partial void One_Changing(string value);
    partial void One_Changed();
    partial void OnEChanging(string value);
    partial void OnEChanged();
    partial void OnKellChanging(string value);
    partial void OnKellChanged();
    partial void OnNo_BloodbagsChanging(System.Nullable<int> value);
    partial void OnNo_BloodbagsChanged();
    partial void OnLastDate_Received_BloodChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDate_Received_BloodChanged();
    partial void OnNextExpectedBloodNeedChanging(System.Nullable<System.DateTime> value);
    partial void OnNextExpectedBloodNeedChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnTerritory_ID_FKChanging(System.Nullable<int> value);
    partial void OnTerritory_ID_FKChanged();
    partial void OnCallPointsChanging(System.Nullable<int> value);
    partial void OnCallPointsChanged();
    partial void OnLastCall_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCall_DateChanged();
    partial void OnTransferDaysChanging(System.Nullable<int> value);
    partial void OnTransferDaysChanged();
    partial void OnFather_Job_ID_FKChanging(System.Nullable<int> value);
    partial void OnFather_Job_ID_FKChanged();
    partial void OnMother_Job_ID_FKChanging(System.Nullable<int> value);
    partial void OnMother_Job_ID_FKChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAdressDetailsChanging(string value);
    partial void OnAdressDetailsChanged();
    #endregion
	
	public Kid()
	{
		this._Kid_Calls = new EntitySet<Kid_Call>(new Action<Kid_Call>(this.attach_Kid_Calls), new Action<Kid_Call>(this.detach_Kid_Calls));
		this._Kid_Helps = new EntitySet<Kid_Help>(new Action<Kid_Help>(this.attach_Kid_Helps), new Action<Kid_Help>(this.detach_Kid_Helps));
		this._Kid_Transfers = new EntitySet<Kid_Transfer>(new Action<Kid_Transfer>(this.attach_Kid_Transfers), new Action<Kid_Transfer>(this.detach_Kid_Transfers));
		this._Volunteer_Kids = new EntitySet<Volunteer_Kid>(new Action<Volunteer_Kid>(this.attach_Volunteer_Kids), new Action<Volunteer_Kid>(this.detach_Volunteer_Kids));
		this._Disease = default(EntityRef<Disease>);
		this._Hospital = default(EntityRef<Hospital>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kid_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Kid_ID
	{
		get
		{
			return this._Kid_ID;
		}
		set
		{
			if ((this._Kid_ID != value))
			{
				this.OnKid_IDChanging(value);
				this.SendPropertyChanging();
				this._Kid_ID = value;
				this.SendPropertyChanged("Kid_ID");
				this.OnKid_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="Date NOT NULL")]
	public System.DateTime CreationDate
	{
		get
		{
			return this._CreationDate;
		}
		set
		{
			if ((this._CreationDate != value))
			{
				this.OnCreationDateChanging(value);
				this.SendPropertyChanging();
				this._CreationDate = value;
				this.SendPropertyChanged("CreationDate");
				this.OnCreationDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KidName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
	public string KidName
	{
		get
		{
			return this._KidName;
		}
		set
		{
			if ((this._KidName != value))
			{
				this.OnKidNameChanging(value);
				this.SendPropertyChanging();
				this._KidName = value;
				this.SendPropertyChanged("KidName");
				this.OnKidNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KidGender", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
	public string KidGender
	{
		get
		{
			return this._KidGender;
		}
		set
		{
			if ((this._KidGender != value))
			{
				this.OnKidGenderChanging(value);
				this.SendPropertyChanging();
				this._KidGender = value;
				this.SendPropertyChanged("KidGender");
				this.OnKidGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(1)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KidMobile1", DbType="NVarChar(15)")]
	public string KidMobile1
	{
		get
		{
			return this._KidMobile1;
		}
		set
		{
			if ((this._KidMobile1 != value))
			{
				this.OnKidMobile1Changing(value);
				this.SendPropertyChanging();
				this._KidMobile1 = value;
				this.SendPropertyChanged("KidMobile1");
				this.OnKidMobile1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KidMobile1_W", DbType="Bit")]
	public System.Nullable<bool> KidMobile1_W
	{
		get
		{
			return this._KidMobile1_W;
		}
		set
		{
			if ((this._KidMobile1_W != value))
			{
				this.OnKidMobile1_WChanging(value);
				this.SendPropertyChanging();
				this._KidMobile1_W = value;
				this.SendPropertyChanged("KidMobile1_W");
				this.OnKidMobile1_WChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KidMobile2", DbType="NVarChar(15)")]
	public string KidMobile2
	{
		get
		{
			return this._KidMobile2;
		}
		set
		{
			if ((this._KidMobile2 != value))
			{
				this.OnKidMobile2Changing(value);
				this.SendPropertyChanging();
				this._KidMobile2 = value;
				this.SendPropertyChanged("KidMobile2");
				this.OnKidMobile2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KidMobile2_W", DbType="Bit")]
	public System.Nullable<bool> KidMobile2_W
	{
		get
		{
			return this._KidMobile2_W;
		}
		set
		{
			if ((this._KidMobile2_W != value))
			{
				this.OnKidMobile2_WChanging(value);
				this.SendPropertyChanging();
				this._KidMobile2_W = value;
				this.SendPropertyChanged("KidMobile2_W");
				this.OnKidMobile2_WChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherMobile1", DbType="NVarChar(15)")]
	public string FatherMobile1
	{
		get
		{
			return this._FatherMobile1;
		}
		set
		{
			if ((this._FatherMobile1 != value))
			{
				this.OnFatherMobile1Changing(value);
				this.SendPropertyChanging();
				this._FatherMobile1 = value;
				this.SendPropertyChanged("FatherMobile1");
				this.OnFatherMobile1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherMobile1_W", DbType="Bit")]
	public System.Nullable<bool> FatherMobile1_W
	{
		get
		{
			return this._FatherMobile1_W;
		}
		set
		{
			if ((this._FatherMobile1_W != value))
			{
				this.OnFatherMobile1_WChanging(value);
				this.SendPropertyChanging();
				this._FatherMobile1_W = value;
				this.SendPropertyChanged("FatherMobile1_W");
				this.OnFatherMobile1_WChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherMobile2", DbType="NVarChar(15)")]
	public string FatherMobile2
	{
		get
		{
			return this._FatherMobile2;
		}
		set
		{
			if ((this._FatherMobile2 != value))
			{
				this.OnFatherMobile2Changing(value);
				this.SendPropertyChanging();
				this._FatherMobile2 = value;
				this.SendPropertyChanged("FatherMobile2");
				this.OnFatherMobile2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherMobile2_W", DbType="Bit")]
	public System.Nullable<bool> FatherMobile2_W
	{
		get
		{
			return this._FatherMobile2_W;
		}
		set
		{
			if ((this._FatherMobile2_W != value))
			{
				this.OnFatherMobile2_WChanging(value);
				this.SendPropertyChanging();
				this._FatherMobile2_W = value;
				this.SendPropertyChanged("FatherMobile2_W");
				this.OnFatherMobile2_WChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherMobile1", DbType="NVarChar(15)")]
	public string MotherMobile1
	{
		get
		{
			return this._MotherMobile1;
		}
		set
		{
			if ((this._MotherMobile1 != value))
			{
				this.OnMotherMobile1Changing(value);
				this.SendPropertyChanging();
				this._MotherMobile1 = value;
				this.SendPropertyChanged("MotherMobile1");
				this.OnMotherMobile1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherMobile1_W", DbType="Bit")]
	public System.Nullable<bool> MotherMobile1_W
	{
		get
		{
			return this._MotherMobile1_W;
		}
		set
		{
			if ((this._MotherMobile1_W != value))
			{
				this.OnMotherMobile1_WChanging(value);
				this.SendPropertyChanging();
				this._MotherMobile1_W = value;
				this.SendPropertyChanged("MotherMobile1_W");
				this.OnMotherMobile1_WChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherMobile2", DbType="NVarChar(15)")]
	public string MotherMobile2
	{
		get
		{
			return this._MotherMobile2;
		}
		set
		{
			if ((this._MotherMobile2 != value))
			{
				this.OnMotherMobile2Changing(value);
				this.SendPropertyChanging();
				this._MotherMobile2 = value;
				this.SendPropertyChanged("MotherMobile2");
				this.OnMotherMobile2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherMobile2_W", DbType="Bit")]
	public System.Nullable<bool> MotherMobile2_W
	{
		get
		{
			return this._MotherMobile2_W;
		}
		set
		{
			if ((this._MotherMobile2_W != value))
			{
				this.OnMotherMobile2_WChanging(value);
				this.SendPropertyChanging();
				this._MotherMobile2_W = value;
				this.SendPropertyChanged("MotherMobile2_W");
				this.OnMotherMobile2_WChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNo", DbType="NVarChar(15)")]
	public string IDNo
	{
		get
		{
			return this._IDNo;
		}
		set
		{
			if ((this._IDNo != value))
			{
				this.OnIDNoChanging(value);
				this.SendPropertyChanging();
				this._IDNo = value;
				this.SendPropertyChanged("IDNo");
				this.OnIDNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
	public System.Nullable<System.DateTime> BirthDate
	{
		get
		{
			return this._BirthDate;
		}
		set
		{
			if ((this._BirthDate != value))
			{
				this.OnBirthDateChanging(value);
				this.SendPropertyChanging();
				this._BirthDate = value;
				this.SendPropertyChanged("BirthDate");
				this.OnBirthDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disease_ID_FK", DbType="Int")]
	public System.Nullable<int> Disease_ID_FK
	{
		get
		{
			return this._Disease_ID_FK;
		}
		set
		{
			if ((this._Disease_ID_FK != value))
			{
				if (this._Disease.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDisease_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._Disease_ID_FK = value;
				this.SendPropertyChanged("Disease_ID_FK");
				this.OnDisease_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiseaseDetails", DbType="NVarChar(MAX)")]
	public string DiseaseDetails
	{
		get
		{
			return this._DiseaseDetails;
		}
		set
		{
			if ((this._DiseaseDetails != value))
			{
				this.OnDiseaseDetailsChanging(value);
				this.SendPropertyChanging();
				this._DiseaseDetails = value;
				this.SendPropertyChanged("DiseaseDetails");
				this.OnDiseaseDetailsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hospital_ID_FK", DbType="Int")]
	public System.Nullable<int> Hospital_ID_FK
	{
		get
		{
			return this._Hospital_ID_FK;
		}
		set
		{
			if ((this._Hospital_ID_FK != value))
			{
				if (this._Hospital.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnHospital_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._Hospital_ID_FK = value;
				this.SendPropertyChanged("Hospital_ID_FK");
				this.OnHospital_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeactivationReason", DbType="NVarChar(250)")]
	public string DeactivationReason
	{
		get
		{
			return this._DeactivationReason;
		}
		set
		{
			if ((this._DeactivationReason != value))
			{
				this.OnDeactivationReasonChanging(value);
				this.SendPropertyChanging();
				this._DeactivationReason = value;
				this.SendPropertyChanged("DeactivationReason");
				this.OnDeactivationReasonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurance", DbType="Bit")]
	public System.Nullable<bool> Insurance
	{
		get
		{
			return this._Insurance;
		}
		set
		{
			if ((this._Insurance != value))
			{
				this.OnInsuranceChanging(value);
				this.SendPropertyChanging();
				this._Insurance = value;
				this.SendPropertyChanged("Insurance");
				this.OnInsuranceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
	public string InsuranceNo
	{
		get
		{
			return this._InsuranceNo;
		}
		set
		{
			if ((this._InsuranceNo != value))
			{
				this.OnInsuranceNoChanging(value);
				this.SendPropertyChanging();
				this._InsuranceNo = value;
				this.SendPropertyChanged("InsuranceNo");
				this.OnInsuranceNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABO", DbType="NVarChar(3)")]
	public string ABO
	{
		get
		{
			return this._ABO;
		}
		set
		{
			if ((this._ABO != value))
			{
				this.OnABOChanging(value);
				this.SendPropertyChanging();
				this._ABO = value;
				this.SendPropertyChanged("ABO");
				this.OnABOChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RH", DbType="NVarChar(1)")]
	public string RH
	{
		get
		{
			return this._RH;
		}
		set
		{
			if ((this._RH != value))
			{
				this.OnRHChanging(value);
				this.SendPropertyChanging();
				this._RH = value;
				this.SendPropertyChanged("RH");
				this.OnRHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_", DbType="NVarChar(1)")]
	public string c_
	{
		get
		{
			return this._c_;
		}
		set
		{
			if ((this._c_ != value))
			{
				this.Onc_Changing(value);
				this.SendPropertyChanging();
				this._c_ = value;
				this.SendPropertyChanged("c_");
				this.Onc_Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="NVarChar(1)")]
	public string C
	{
		get
		{
			return this._C;
		}
		set
		{
			if ((this._C != value))
			{
				this.OnCChanging(value);
				this.SendPropertyChanging();
				this._C = value;
				this.SendPropertyChanged("C");
				this.OnCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_", DbType="NVarChar(1)")]
	public string e_
	{
		get
		{
			return this._e_;
		}
		set
		{
			if ((this._e_ != value))
			{
				this.One_Changing(value);
				this.SendPropertyChanging();
				this._e_ = value;
				this.SendPropertyChanged("e_");
				this.One_Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E", DbType="NVarChar(1)")]
	public string E
	{
		get
		{
			return this._E;
		}
		set
		{
			if ((this._E != value))
			{
				this.OnEChanging(value);
				this.SendPropertyChanging();
				this._E = value;
				this.SendPropertyChanged("E");
				this.OnEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kell", DbType="NVarChar(1)")]
	public string Kell
	{
		get
		{
			return this._Kell;
		}
		set
		{
			if ((this._Kell != value))
			{
				this.OnKellChanging(value);
				this.SendPropertyChanging();
				this._Kell = value;
				this.SendPropertyChanged("Kell");
				this.OnKellChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Bloodbags", DbType="Int")]
	public System.Nullable<int> No_Bloodbags
	{
		get
		{
			return this._No_Bloodbags;
		}
		set
		{
			if ((this._No_Bloodbags != value))
			{
				this.OnNo_BloodbagsChanging(value);
				this.SendPropertyChanging();
				this._No_Bloodbags = value;
				this.SendPropertyChanged("No_Bloodbags");
				this.OnNo_BloodbagsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDate_Received_Blood", DbType="Date")]
	public System.Nullable<System.DateTime> LastDate_Received_Blood
	{
		get
		{
			return this._LastDate_Received_Blood;
		}
		set
		{
			if ((this._LastDate_Received_Blood != value))
			{
				this.OnLastDate_Received_BloodChanging(value);
				this.SendPropertyChanging();
				this._LastDate_Received_Blood = value;
				this.SendPropertyChanged("LastDate_Received_Blood");
				this.OnLastDate_Received_BloodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextExpectedBloodNeed", DbType="Date")]
	public System.Nullable<System.DateTime> NextExpectedBloodNeed
	{
		get
		{
			return this._NextExpectedBloodNeed;
		}
		set
		{
			if ((this._NextExpectedBloodNeed != value))
			{
				this.OnNextExpectedBloodNeedChanging(value);
				this.SendPropertyChanging();
				this._NextExpectedBloodNeed = value;
				this.SendPropertyChanged("NextExpectedBloodNeed");
				this.OnNextExpectedBloodNeedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
	public System.Nullable<bool> Deleted
	{
		get
		{
			return this._Deleted;
		}
		set
		{
			if ((this._Deleted != value))
			{
				this.OnDeletedChanging(value);
				this.SendPropertyChanging();
				this._Deleted = value;
				this.SendPropertyChanged("Deleted");
				this.OnDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Territory_ID_FK", DbType="Int")]
	public System.Nullable<int> Territory_ID_FK
	{
		get
		{
			return this._Territory_ID_FK;
		}
		set
		{
			if ((this._Territory_ID_FK != value))
			{
				this.OnTerritory_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._Territory_ID_FK = value;
				this.SendPropertyChanged("Territory_ID_FK");
				this.OnTerritory_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallPoints", DbType="Int")]
	public System.Nullable<int> CallPoints
	{
		get
		{
			return this._CallPoints;
		}
		set
		{
			if ((this._CallPoints != value))
			{
				this.OnCallPointsChanging(value);
				this.SendPropertyChanging();
				this._CallPoints = value;
				this.SendPropertyChanged("CallPoints");
				this.OnCallPointsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCall_Date", DbType="Date")]
	public System.Nullable<System.DateTime> LastCall_Date
	{
		get
		{
			return this._LastCall_Date;
		}
		set
		{
			if ((this._LastCall_Date != value))
			{
				this.OnLastCall_DateChanging(value);
				this.SendPropertyChanging();
				this._LastCall_Date = value;
				this.SendPropertyChanged("LastCall_Date");
				this.OnLastCall_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDays", DbType="Int")]
	public System.Nullable<int> TransferDays
	{
		get
		{
			return this._TransferDays;
		}
		set
		{
			if ((this._TransferDays != value))
			{
				this.OnTransferDaysChanging(value);
				this.SendPropertyChanging();
				this._TransferDays = value;
				this.SendPropertyChanged("TransferDays");
				this.OnTransferDaysChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Father_Job_ID_FK", DbType="Int")]
	public System.Nullable<int> Father_Job_ID_FK
	{
		get
		{
			return this._Father_Job_ID_FK;
		}
		set
		{
			if ((this._Father_Job_ID_FK != value))
			{
				this.OnFather_Job_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._Father_Job_ID_FK = value;
				this.SendPropertyChanged("Father_Job_ID_FK");
				this.OnFather_Job_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mother_Job_ID_FK", DbType="Int")]
	public System.Nullable<int> Mother_Job_ID_FK
	{
		get
		{
			return this._Mother_Job_ID_FK;
		}
		set
		{
			if ((this._Mother_Job_ID_FK != value))
			{
				this.OnMother_Job_ID_FKChanging(value);
				this.SendPropertyChanging();
				this._Mother_Job_ID_FK = value;
				this.SendPropertyChanged("Mother_Job_ID_FK");
				this.OnMother_Job_ID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdressDetails", DbType="NVarChar(500)")]
	public string AdressDetails
	{
		get
		{
			return this._AdressDetails;
		}
		set
		{
			if ((this._AdressDetails != value))
			{
				this.OnAdressDetailsChanging(value);
				this.SendPropertyChanging();
				this._AdressDetails = value;
				this.SendPropertyChanged("AdressDetails");
				this.OnAdressDetailsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kid_Kid_Call", Storage="_Kid_Calls", ThisKey="Kid_ID", OtherKey="Kid_ID_FK")]
	public EntitySet<Kid_Call> Kid_Calls
	{
		get
		{
			return this._Kid_Calls;
		}
		set
		{
			this._Kid_Calls.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kid_Kid_Help", Storage="_Kid_Helps", ThisKey="Kid_ID", OtherKey="Kid_ID_FK")]
	public EntitySet<Kid_Help> Kid_Helps
	{
		get
		{
			return this._Kid_Helps;
		}
		set
		{
			this._Kid_Helps.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kid_Kid_Transfer", Storage="_Kid_Transfers", ThisKey="Kid_ID", OtherKey="Kid_ID_FK")]
	public EntitySet<Kid_Transfer> Kid_Transfers
	{
		get
		{
			return this._Kid_Transfers;
		}
		set
		{
			this._Kid_Transfers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kid_Volunteer_Kid", Storage="_Volunteer_Kids", ThisKey="Kid_ID", OtherKey="K_ID_FK")]
	public EntitySet<Volunteer_Kid> Volunteer_Kids
	{
		get
		{
			return this._Volunteer_Kids;
		}
		set
		{
			this._Volunteer_Kids.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disease_Kid", Storage="_Disease", ThisKey="Disease_ID_FK", OtherKey="DiseaseID", IsForeignKey=true)]
	public Disease Disease
	{
		get
		{
			return this._Disease.Entity;
		}
		set
		{
			Disease previousValue = this._Disease.Entity;
			if (((previousValue != value) 
						|| (this._Disease.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Disease.Entity = null;
					previousValue.Kids.Remove(this);
				}
				this._Disease.Entity = value;
				if ((value != null))
				{
					value.Kids.Add(this);
					this._Disease_ID_FK = value.DiseaseID;
				}
				else
				{
					this._Disease_ID_FK = default(Nullable<int>);
				}
				this.SendPropertyChanged("Disease");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hospital_Kid", Storage="_Hospital", ThisKey="Hospital_ID_FK", OtherKey="Hospital_ID", IsForeignKey=true)]
	public Hospital Hospital
	{
		get
		{
			return this._Hospital.Entity;
		}
		set
		{
			Hospital previousValue = this._Hospital.Entity;
			if (((previousValue != value) 
						|| (this._Hospital.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Hospital.Entity = null;
					previousValue.Kids.Remove(this);
				}
				this._Hospital.Entity = value;
				if ((value != null))
				{
					value.Kids.Add(this);
					this._Hospital_ID_FK = value.Hospital_ID;
				}
				else
				{
					this._Hospital_ID_FK = default(Nullable<int>);
				}
				this.SendPropertyChanged("Hospital");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Kid_Calls(Kid_Call entity)
	{
		this.SendPropertyChanging();
		entity.Kid = this;
	}
	
	private void detach_Kid_Calls(Kid_Call entity)
	{
		this.SendPropertyChanging();
		entity.Kid = null;
	}
	
	private void attach_Kid_Helps(Kid_Help entity)
	{
		this.SendPropertyChanging();
		entity.Kid = this;
	}
	
	private void detach_Kid_Helps(Kid_Help entity)
	{
		this.SendPropertyChanging();
		entity.Kid = null;
	}
	
	private void attach_Kid_Transfers(Kid_Transfer entity)
	{
		this.SendPropertyChanging();
		entity.Kid = this;
	}
	
	private void detach_Kid_Transfers(Kid_Transfer entity)
	{
		this.SendPropertyChanging();
		entity.Kid = null;
	}
	
	private void attach_Volunteer_Kids(Volunteer_Kid entity)
	{
		this.SendPropertyChanging();
		entity.Kid = this;
	}
	
	private void detach_Volunteer_Kids(Volunteer_Kid entity)
	{
		this.SendPropertyChanging();
		entity.Kid = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonationPlaceType")]
public partial class DonationPlaceType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DonationPlaceTypeID;
	
	private string _DonationPlaceTypeName;
	
	private EntitySet<DonationPlace> _DonationPlaces;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonationPlaceTypeIDChanging(int value);
    partial void OnDonationPlaceTypeIDChanged();
    partial void OnDonationPlaceTypeNameChanging(string value);
    partial void OnDonationPlaceTypeNameChanged();
    #endregion
	
	public DonationPlaceType()
	{
		this._DonationPlaces = new EntitySet<DonationPlace>(new Action<DonationPlace>(this.attach_DonationPlaces), new Action<DonationPlace>(this.detach_DonationPlaces));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationPlaceTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DonationPlaceTypeID
	{
		get
		{
			return this._DonationPlaceTypeID;
		}
		set
		{
			if ((this._DonationPlaceTypeID != value))
			{
				this.OnDonationPlaceTypeIDChanging(value);
				this.SendPropertyChanging();
				this._DonationPlaceTypeID = value;
				this.SendPropertyChanged("DonationPlaceTypeID");
				this.OnDonationPlaceTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationPlaceTypeName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string DonationPlaceTypeName
	{
		get
		{
			return this._DonationPlaceTypeName;
		}
		set
		{
			if ((this._DonationPlaceTypeName != value))
			{
				this.OnDonationPlaceTypeNameChanging(value);
				this.SendPropertyChanging();
				this._DonationPlaceTypeName = value;
				this.SendPropertyChanged("DonationPlaceTypeName");
				this.OnDonationPlaceTypeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonationPlaceType_DonationPlace", Storage="_DonationPlaces", ThisKey="DonationPlaceTypeID", OtherKey="DonationPlaceTypeID_FK")]
	public EntitySet<DonationPlace> DonationPlaces
	{
		get
		{
			return this._DonationPlaces;
		}
		set
		{
			this._DonationPlaces.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_DonationPlaces(DonationPlace entity)
	{
		this.SendPropertyChanging();
		entity.DonationPlaceType = this;
	}
	
	private void detach_DonationPlaces(DonationPlace entity)
	{
		this.SendPropertyChanging();
		entity.DonationPlaceType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonationPlaces")]
public partial class DonationPlace : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DonationPlaceID;
	
	private string _DonationPlaceName;
	
	private int _DonationPlaceTypeID_FK;
	
	private string _OLDName;
	
	private EntityRef<DonationPlaceType> _DonationPlaceType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonationPlaceIDChanging(int value);
    partial void OnDonationPlaceIDChanged();
    partial void OnDonationPlaceNameChanging(string value);
    partial void OnDonationPlaceNameChanged();
    partial void OnDonationPlaceTypeID_FKChanging(int value);
    partial void OnDonationPlaceTypeID_FKChanged();
    partial void OnOLDNameChanging(string value);
    partial void OnOLDNameChanged();
    #endregion
	
	public DonationPlace()
	{
		this._DonationPlaceType = default(EntityRef<DonationPlaceType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationPlaceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DonationPlaceID
	{
		get
		{
			return this._DonationPlaceID;
		}
		set
		{
			if ((this._DonationPlaceID != value))
			{
				this.OnDonationPlaceIDChanging(value);
				this.SendPropertyChanging();
				this._DonationPlaceID = value;
				this.SendPropertyChanged("DonationPlaceID");
				this.OnDonationPlaceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationPlaceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string DonationPlaceName
	{
		get
		{
			return this._DonationPlaceName;
		}
		set
		{
			if ((this._DonationPlaceName != value))
			{
				this.OnDonationPlaceNameChanging(value);
				this.SendPropertyChanging();
				this._DonationPlaceName = value;
				this.SendPropertyChanged("DonationPlaceName");
				this.OnDonationPlaceNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationPlaceTypeID_FK", DbType="Int NOT NULL")]
	public int DonationPlaceTypeID_FK
	{
		get
		{
			return this._DonationPlaceTypeID_FK;
		}
		set
		{
			if ((this._DonationPlaceTypeID_FK != value))
			{
				if (this._DonationPlaceType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDonationPlaceTypeID_FKChanging(value);
				this.SendPropertyChanging();
				this._DonationPlaceTypeID_FK = value;
				this.SendPropertyChanged("DonationPlaceTypeID_FK");
				this.OnDonationPlaceTypeID_FKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDName", DbType="NVarChar(255)")]
	public string OLDName
	{
		get
		{
			return this._OLDName;
		}
		set
		{
			if ((this._OLDName != value))
			{
				this.OnOLDNameChanging(value);
				this.SendPropertyChanging();
				this._OLDName = value;
				this.SendPropertyChanged("OLDName");
				this.OnOLDNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonationPlaceType_DonationPlace", Storage="_DonationPlaceType", ThisKey="DonationPlaceTypeID_FK", OtherKey="DonationPlaceTypeID", IsForeignKey=true)]
	public DonationPlaceType DonationPlaceType
	{
		get
		{
			return this._DonationPlaceType.Entity;
		}
		set
		{
			DonationPlaceType previousValue = this._DonationPlaceType.Entity;
			if (((previousValue != value) 
						|| (this._DonationPlaceType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DonationPlaceType.Entity = null;
					previousValue.DonationPlaces.Remove(this);
				}
				this._DonationPlaceType.Entity = value;
				if ((value != null))
				{
					value.DonationPlaces.Add(this);
					this._DonationPlaceTypeID_FK = value.DonationPlaceTypeID;
				}
				else
				{
					this._DonationPlaceTypeID_FK = default(int);
				}
				this.SendPropertyChanged("DonationPlaceType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArchivingReason")]
public partial class ArchivingReason : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ReasonID;
	
	private string _ReasonName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReasonIDChanging(int value);
    partial void OnReasonIDChanged();
    partial void OnReasonNameChanging(string value);
    partial void OnReasonNameChanged();
    #endregion
	
	public ArchivingReason()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ReasonID
	{
		get
		{
			return this._ReasonID;
		}
		set
		{
			if ((this._ReasonID != value))
			{
				this.OnReasonIDChanging(value);
				this.SendPropertyChanging();
				this._ReasonID = value;
				this.SendPropertyChanged("ReasonID");
				this.OnReasonIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonName", DbType="NVarChar(550) NOT NULL", CanBeNull=false)]
	public string ReasonName
	{
		get
		{
			return this._ReasonName;
		}
		set
		{
			if ((this._ReasonName != value))
			{
				this.OnReasonNameChanging(value);
				this.SendPropertyChanging();
				this._ReasonName = value;
				this.SendPropertyChanged("ReasonName");
				this.OnReasonNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _UserId;
	
	private string _UserName;
	
	private string _LoweredUserName;
	
	private string _MobileAlias;
	
	private bool _IsAnonymous;
	
	private System.DateTime _LastActivityDate;
	
	private EntityRef<aspnet_Membership> _aspnet_Membership;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
	
	public aspnet_User()
	{
		this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredUserName
	{
		get
		{
			return this._LoweredUserName;
		}
		set
		{
			if ((this._LoweredUserName != value))
			{
				this.OnLoweredUserNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredUserName = value;
				this.SendPropertyChanged("LoweredUserName");
				this.OnLoweredUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
	public string MobileAlias
	{
		get
		{
			return this._MobileAlias;
		}
		set
		{
			if ((this._MobileAlias != value))
			{
				this.OnMobileAliasChanging(value);
				this.SendPropertyChanging();
				this._MobileAlias = value;
				this.SendPropertyChanged("MobileAlias");
				this.OnMobileAliasChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
	public bool IsAnonymous
	{
		get
		{
			return this._IsAnonymous;
		}
		set
		{
			if ((this._IsAnonymous != value))
			{
				this.OnIsAnonymousChanging(value);
				this.SendPropertyChanging();
				this._IsAnonymous = value;
				this.SendPropertyChanged("IsAnonymous");
				this.OnIsAnonymousChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastActivityDate
	{
		get
		{
			return this._LastActivityDate;
		}
		set
		{
			if ((this._LastActivityDate != value))
			{
				this.OnLastActivityDateChanging(value);
				this.SendPropertyChanging();
				this._LastActivityDate = value;
				this.SendPropertyChanged("LastActivityDate");
				this.OnLastActivityDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
	public aspnet_Membership aspnet_Membership
	{
		get
		{
			return this._aspnet_Membership.Entity;
		}
		set
		{
			aspnet_Membership previousValue = this._aspnet_Membership.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Membership.Entity = null;
					previousValue.aspnet_User = null;
				}
				this._aspnet_Membership.Entity = value;
				if ((value != null))
				{
					value.aspnet_User = this;
				}
				this.SendPropertyChanged("aspnet_Membership");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _UserId;
	
	private string _Password;
	
	private int _PasswordFormat;
	
	private string _PasswordSalt;
	
	private string _MobilePIN;
	
	private string _Email;
	
	private string _LoweredEmail;
	
	private string _PasswordQuestion;
	
	private string _PasswordAnswer;
	
	private bool _IsApproved;
	
	private bool _IsLockedOut;
	
	private System.DateTime _CreateDate;
	
	private System.DateTime _LastLoginDate;
	
	private System.DateTime _LastPasswordChangedDate;
	
	private System.DateTime _LastLockoutDate;
	
	private int _FailedPasswordAttemptCount;
	
	private System.DateTime _FailedPasswordAttemptWindowStart;
	
	private int _FailedPasswordAnswerAttemptCount;
	
	private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
	
	private string _Comment;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
	
	public aspnet_Membership()
	{
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
	public int PasswordFormat
	{
		get
		{
			return this._PasswordFormat;
		}
		set
		{
			if ((this._PasswordFormat != value))
			{
				this.OnPasswordFormatChanging(value);
				this.SendPropertyChanging();
				this._PasswordFormat = value;
				this.SendPropertyChanged("PasswordFormat");
				this.OnPasswordFormatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
	public string PasswordSalt
	{
		get
		{
			return this._PasswordSalt;
		}
		set
		{
			if ((this._PasswordSalt != value))
			{
				this.OnPasswordSaltChanging(value);
				this.SendPropertyChanging();
				this._PasswordSalt = value;
				this.SendPropertyChanged("PasswordSalt");
				this.OnPasswordSaltChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
	public string MobilePIN
	{
		get
		{
			return this._MobilePIN;
		}
		set
		{
			if ((this._MobilePIN != value))
			{
				this.OnMobilePINChanging(value);
				this.SendPropertyChanging();
				this._MobilePIN = value;
				this.SendPropertyChanged("MobilePIN");
				this.OnMobilePINChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
	public string LoweredEmail
	{
		get
		{
			return this._LoweredEmail;
		}
		set
		{
			if ((this._LoweredEmail != value))
			{
				this.OnLoweredEmailChanging(value);
				this.SendPropertyChanging();
				this._LoweredEmail = value;
				this.SendPropertyChanged("LoweredEmail");
				this.OnLoweredEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
	public string PasswordQuestion
	{
		get
		{
			return this._PasswordQuestion;
		}
		set
		{
			if ((this._PasswordQuestion != value))
			{
				this.OnPasswordQuestionChanging(value);
				this.SendPropertyChanging();
				this._PasswordQuestion = value;
				this.SendPropertyChanged("PasswordQuestion");
				this.OnPasswordQuestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
	public string PasswordAnswer
	{
		get
		{
			return this._PasswordAnswer;
		}
		set
		{
			if ((this._PasswordAnswer != value))
			{
				this.OnPasswordAnswerChanging(value);
				this.SendPropertyChanging();
				this._PasswordAnswer = value;
				this.SendPropertyChanged("PasswordAnswer");
				this.OnPasswordAnswerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
	public bool IsApproved
	{
		get
		{
			return this._IsApproved;
		}
		set
		{
			if ((this._IsApproved != value))
			{
				this.OnIsApprovedChanging(value);
				this.SendPropertyChanging();
				this._IsApproved = value;
				this.SendPropertyChanged("IsApproved");
				this.OnIsApprovedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
	public bool IsLockedOut
	{
		get
		{
			return this._IsLockedOut;
		}
		set
		{
			if ((this._IsLockedOut != value))
			{
				this.OnIsLockedOutChanging(value);
				this.SendPropertyChanging();
				this._IsLockedOut = value;
				this.SendPropertyChanged("IsLockedOut");
				this.OnIsLockedOutChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastLoginDate
	{
		get
		{
			return this._LastLoginDate;
		}
		set
		{
			if ((this._LastLoginDate != value))
			{
				this.OnLastLoginDateChanging(value);
				this.SendPropertyChanging();
				this._LastLoginDate = value;
				this.SendPropertyChanged("LastLoginDate");
				this.OnLastLoginDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastPasswordChangedDate
	{
		get
		{
			return this._LastPasswordChangedDate;
		}
		set
		{
			if ((this._LastPasswordChangedDate != value))
			{
				this.OnLastPasswordChangedDateChanging(value);
				this.SendPropertyChanging();
				this._LastPasswordChangedDate = value;
				this.SendPropertyChanged("LastPasswordChangedDate");
				this.OnLastPasswordChangedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastLockoutDate
	{
		get
		{
			return this._LastLockoutDate;
		}
		set
		{
			if ((this._LastLockoutDate != value))
			{
				this.OnLastLockoutDateChanging(value);
				this.SendPropertyChanging();
				this._LastLockoutDate = value;
				this.SendPropertyChanged("LastLockoutDate");
				this.OnLastLockoutDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
	public int FailedPasswordAttemptCount
	{
		get
		{
			return this._FailedPasswordAttemptCount;
		}
		set
		{
			if ((this._FailedPasswordAttemptCount != value))
			{
				this.OnFailedPasswordAttemptCountChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAttemptCount = value;
				this.SendPropertyChanged("FailedPasswordAttemptCount");
				this.OnFailedPasswordAttemptCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
	public System.DateTime FailedPasswordAttemptWindowStart
	{
		get
		{
			return this._FailedPasswordAttemptWindowStart;
		}
		set
		{
			if ((this._FailedPasswordAttemptWindowStart != value))
			{
				this.OnFailedPasswordAttemptWindowStartChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAttemptWindowStart = value;
				this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
				this.OnFailedPasswordAttemptWindowStartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
	public int FailedPasswordAnswerAttemptCount
	{
		get
		{
			return this._FailedPasswordAnswerAttemptCount;
		}
		set
		{
			if ((this._FailedPasswordAnswerAttemptCount != value))
			{
				this.OnFailedPasswordAnswerAttemptCountChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAnswerAttemptCount = value;
				this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
				this.OnFailedPasswordAnswerAttemptCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
	public System.DateTime FailedPasswordAnswerAttemptWindowStart
	{
		get
		{
			return this._FailedPasswordAnswerAttemptWindowStart;
		}
		set
		{
			if ((this._FailedPasswordAnswerAttemptWindowStart != value))
			{
				this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAnswerAttemptWindowStart = value;
				this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
				this.OnFailedPasswordAnswerAttemptWindowStartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_Membership = null;
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_Membership = this;
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class LogSearchResult
{
	
	private string _Action;
	
	private System.Nullable<System.Guid> _UserID;
	
	private string _ActionIN;
	
	private System.Nullable<int> _VID;
	
	private System.Nullable<System.DateTime> _ActionDate;
	
	private int _LogID;
	
	private string _UserName;
	
	public LogSearchResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(500)")]
	public string Action
	{
		get
		{
			return this._Action;
		}
		set
		{
			if ((this._Action != value))
			{
				this._Action = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this._UserID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionIN", DbType="NVarChar(500)")]
	public string ActionIN
	{
		get
		{
			return this._ActionIN;
		}
		set
		{
			if ((this._ActionIN != value))
			{
				this._ActionIN = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VID", DbType="Int")]
	public System.Nullable<int> VID
	{
		get
		{
			return this._VID;
		}
		set
		{
			if ((this._VID != value))
			{
				this._VID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ActionDate
	{
		get
		{
			return this._ActionDate;
		}
		set
		{
			if ((this._ActionDate != value))
			{
				this._ActionDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="Int NOT NULL")]
	public int LogID
	{
		get
		{
			return this._LogID;
		}
		set
		{
			if ((this._LogID != value))
			{
				this._LogID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this._UserName = value;
			}
		}
	}
}

public partial class EmergencySearchResult
{
	
	private int _V_ID;
	
	private string _Name;
	
	private int _V_ID1;
	
	private string _Name1;
	
	private string _Mobile1;
	
	private string _Mobile2;
	
	private string _BloodType;
	
	private string _Gender;
	
	private string _MobileNetwork1;
	
	private string _MobileNetwork2;
	
	private string _Notes;
	
	private System.Nullable<int> _CallPoints;
	
	private System.Nullable<int> _DonationPoints;
	
	private System.Nullable<int> _CallPoints1;
	
	private string _TerritoryName;
	
	private System.Nullable<System.DateTime> _DT;
	
	private string _St;
	
	private string _Cm;
	
	private System.Nullable<System.DateTime> _CD;
	
	public EmergencySearchResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_ID", DbType="Int NOT NULL")]
	public int V_ID
	{
		get
		{
			return this._V_ID;
		}
		set
		{
			if ((this._V_ID != value))
			{
				this._V_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_ID1", DbType="Int NOT NULL")]
	public int V_ID1
	{
		get
		{
			return this._V_ID1;
		}
		set
		{
			if ((this._V_ID1 != value))
			{
				this._V_ID1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name1", DbType="NVarChar(255)")]
	public string Name1
	{
		get
		{
			return this._Name1;
		}
		set
		{
			if ((this._Name1 != value))
			{
				this._Name1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile1", DbType="NVarChar(20)")]
	public string Mobile1
	{
		get
		{
			return this._Mobile1;
		}
		set
		{
			if ((this._Mobile1 != value))
			{
				this._Mobile1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile2", DbType="NVarChar(20)")]
	public string Mobile2
	{
		get
		{
			return this._Mobile2;
		}
		set
		{
			if ((this._Mobile2 != value))
			{
				this._Mobile2 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="NVarChar(1)")]
	public string BloodType
	{
		get
		{
			return this._BloodType;
		}
		set
		{
			if ((this._BloodType != value))
			{
				this._BloodType = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(1)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this._Gender = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNetwork1", DbType="NVarChar(1)")]
	public string MobileNetwork1
	{
		get
		{
			return this._MobileNetwork1;
		}
		set
		{
			if ((this._MobileNetwork1 != value))
			{
				this._MobileNetwork1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNetwork2", DbType="NVarChar(1)")]
	public string MobileNetwork2
	{
		get
		{
			return this._MobileNetwork2;
		}
		set
		{
			if ((this._MobileNetwork2 != value))
			{
				this._MobileNetwork2 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this._Notes = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallPoints", DbType="Int")]
	public System.Nullable<int> CallPoints
	{
		get
		{
			return this._CallPoints;
		}
		set
		{
			if ((this._CallPoints != value))
			{
				this._CallPoints = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationPoints", DbType="Int")]
	public System.Nullable<int> DonationPoints
	{
		get
		{
			return this._DonationPoints;
		}
		set
		{
			if ((this._DonationPoints != value))
			{
				this._DonationPoints = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallPoints1", DbType="Int")]
	public System.Nullable<int> CallPoints1
	{
		get
		{
			return this._CallPoints1;
		}
		set
		{
			if ((this._CallPoints1 != value))
			{
				this._CallPoints1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryName", DbType="NVarChar(100)")]
	public string TerritoryName
	{
		get
		{
			return this._TerritoryName;
		}
		set
		{
			if ((this._TerritoryName != value))
			{
				this._TerritoryName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DT", DbType="Date")]
	public System.Nullable<System.DateTime> DT
	{
		get
		{
			return this._DT;
		}
		set
		{
			if ((this._DT != value))
			{
				this._DT = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_St", DbType="NVarChar(1)")]
	public string St
	{
		get
		{
			return this._St;
		}
		set
		{
			if ((this._St != value))
			{
				this._St = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cm", DbType="NVarChar(MAX)")]
	public string Cm
	{
		get
		{
			return this._Cm;
		}
		set
		{
			if ((this._Cm != value))
			{
				this._Cm = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CD", DbType="Date")]
	public System.Nullable<System.DateTime> CD
	{
		get
		{
			return this._CD;
		}
		set
		{
			if ((this._CD != value))
			{
				this._CD = value;
			}
		}
	}
}

public partial class Deleted_VolunteerResult
{
	
	private int _V_ID;
	
	private string _Name;
	
	private string _Mobile1;
	
	private System.Nullable<bool> _Mobile1_W;
	
	private System.Nullable<bool> _Mobile2_W;
	
	private string _Mobile2;
	
	private System.Nullable<bool> _Deleted;
	
	private string _ABO;
	
	private string _RH;
	
	private System.Nullable<System.Guid> _UserID;
	
	private System.Nullable<System.DateTime> _ActionDate;
	
	private string _ActionIN;
	
	private string _Action;
	
	private System.Nullable<int> _VID;
	
	private string _UserName;
	
	public Deleted_VolunteerResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_ID", DbType="Int NOT NULL")]
	public int V_ID
	{
		get
		{
			return this._V_ID;
		}
		set
		{
			if ((this._V_ID != value))
			{
				this._V_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile1", DbType="NVarChar(20)")]
	public string Mobile1
	{
		get
		{
			return this._Mobile1;
		}
		set
		{
			if ((this._Mobile1 != value))
			{
				this._Mobile1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile1_W", DbType="Bit")]
	public System.Nullable<bool> Mobile1_W
	{
		get
		{
			return this._Mobile1_W;
		}
		set
		{
			if ((this._Mobile1_W != value))
			{
				this._Mobile1_W = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile2_W", DbType="Bit")]
	public System.Nullable<bool> Mobile2_W
	{
		get
		{
			return this._Mobile2_W;
		}
		set
		{
			if ((this._Mobile2_W != value))
			{
				this._Mobile2_W = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile2", DbType="NVarChar(20)")]
	public string Mobile2
	{
		get
		{
			return this._Mobile2;
		}
		set
		{
			if ((this._Mobile2 != value))
			{
				this._Mobile2 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
	public System.Nullable<bool> Deleted
	{
		get
		{
			return this._Deleted;
		}
		set
		{
			if ((this._Deleted != value))
			{
				this._Deleted = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABO", DbType="NVarChar(3)")]
	public string ABO
	{
		get
		{
			return this._ABO;
		}
		set
		{
			if ((this._ABO != value))
			{
				this._ABO = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RH", DbType="NVarChar(1)")]
	public string RH
	{
		get
		{
			return this._RH;
		}
		set
		{
			if ((this._RH != value))
			{
				this._RH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this._UserID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ActionDate
	{
		get
		{
			return this._ActionDate;
		}
		set
		{
			if ((this._ActionDate != value))
			{
				this._ActionDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionIN", DbType="NVarChar(500)")]
	public string ActionIN
	{
		get
		{
			return this._ActionIN;
		}
		set
		{
			if ((this._ActionIN != value))
			{
				this._ActionIN = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(500)")]
	public string Action
	{
		get
		{
			return this._Action;
		}
		set
		{
			if ((this._Action != value))
			{
				this._Action = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VID", DbType="Int")]
	public System.Nullable<int> VID
	{
		get
		{
			return this._VID;
		}
		set
		{
			if ((this._VID != value))
			{
				this._VID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this._UserName = value;
			}
		}
	}
}

public partial class Kid_SearchResult
{
	
	private int _Kid_ID;
	
	private string _KidName;
	
	private string _KidGender;
	
	private string _ABO;
	
	private string _RH;
	
	private string _C;
	
	private string _c_;
	
	private string _E;
	
	private string _e_;
	
	private string _Kell;
	
	private System.Nullable<System.DateTime> _LastDate_Received_Blood;
	
	private System.Nullable<System.DateTime> _NextExpectedBloodNeed;
	
	private string _Status;
	
	private string _IDNo;
	
	private System.Nullable<System.DateTime> _BirthDate;
	
	private System.Nullable<int> _CallPoints;
	
	private string _HospitalName;
	
	private string _DiseaseName;
	
	private System.Nullable<System.DateTime> _CD;
	
	public Kid_SearchResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kid_ID", DbType="Int NOT NULL")]
	public int Kid_ID
	{
		get
		{
			return this._Kid_ID;
		}
		set
		{
			if ((this._Kid_ID != value))
			{
				this._Kid_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KidName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
	public string KidName
	{
		get
		{
			return this._KidName;
		}
		set
		{
			if ((this._KidName != value))
			{
				this._KidName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KidGender", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
	public string KidGender
	{
		get
		{
			return this._KidGender;
		}
		set
		{
			if ((this._KidGender != value))
			{
				this._KidGender = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABO", DbType="NVarChar(3)")]
	public string ABO
	{
		get
		{
			return this._ABO;
		}
		set
		{
			if ((this._ABO != value))
			{
				this._ABO = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RH", DbType="NVarChar(1)")]
	public string RH
	{
		get
		{
			return this._RH;
		}
		set
		{
			if ((this._RH != value))
			{
				this._RH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="NVarChar(1)")]
	public string C
	{
		get
		{
			return this._C;
		}
		set
		{
			if ((this._C != value))
			{
				this._C = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_", DbType="NVarChar(1)")]
	public string c_
	{
		get
		{
			return this._c_;
		}
		set
		{
			if ((this._c_ != value))
			{
				this._c_ = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E", DbType="NVarChar(1)")]
	public string E
	{
		get
		{
			return this._E;
		}
		set
		{
			if ((this._E != value))
			{
				this._E = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_", DbType="NVarChar(1)")]
	public string e_
	{
		get
		{
			return this._e_;
		}
		set
		{
			if ((this._e_ != value))
			{
				this._e_ = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kell", DbType="NVarChar(1)")]
	public string Kell
	{
		get
		{
			return this._Kell;
		}
		set
		{
			if ((this._Kell != value))
			{
				this._Kell = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDate_Received_Blood", DbType="Date")]
	public System.Nullable<System.DateTime> LastDate_Received_Blood
	{
		get
		{
			return this._LastDate_Received_Blood;
		}
		set
		{
			if ((this._LastDate_Received_Blood != value))
			{
				this._LastDate_Received_Blood = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextExpectedBloodNeed", DbType="Date")]
	public System.Nullable<System.DateTime> NextExpectedBloodNeed
	{
		get
		{
			return this._NextExpectedBloodNeed;
		}
		set
		{
			if ((this._NextExpectedBloodNeed != value))
			{
				this._NextExpectedBloodNeed = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(1)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this._Status = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNo", DbType="NVarChar(15)")]
	public string IDNo
	{
		get
		{
			return this._IDNo;
		}
		set
		{
			if ((this._IDNo != value))
			{
				this._IDNo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
	public System.Nullable<System.DateTime> BirthDate
	{
		get
		{
			return this._BirthDate;
		}
		set
		{
			if ((this._BirthDate != value))
			{
				this._BirthDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallPoints", DbType="Int")]
	public System.Nullable<int> CallPoints
	{
		get
		{
			return this._CallPoints;
		}
		set
		{
			if ((this._CallPoints != value))
			{
				this._CallPoints = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalName", DbType="NVarChar(250)")]
	public string HospitalName
	{
		get
		{
			return this._HospitalName;
		}
		set
		{
			if ((this._HospitalName != value))
			{
				this._HospitalName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiseaseName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
	public string DiseaseName
	{
		get
		{
			return this._DiseaseName;
		}
		set
		{
			if ((this._DiseaseName != value))
			{
				this._DiseaseName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CD", DbType="Date")]
	public System.Nullable<System.DateTime> CD
	{
		get
		{
			return this._CD;
		}
		set
		{
			if ((this._CD != value))
			{
				this._CD = value;
			}
		}
	}
}

public partial class SearchVolunteerResult
{
	
	private int _V_ID;
	
	private string _Name;
	
	private int _V_ID1;
	
	private string _Name1;
	
	private string _Mobile1;
	
	private string _Mobile2;
	
	private string _BloodType;
	
	private string _Gender;
	
	private string _MobileNetwork1;
	
	private string _MobileNetwork2;
	
	private string _Notes;
	
	private System.Nullable<int> _DonationPoints;
	
	private System.Nullable<int> _CallPoints;
	
	private string _TerritoryName;
	
	private System.Nullable<System.DateTime> _DT;
	
	private string _St;
	
	private string _Cm;
	
	private string _Comments;
	
	private string _ABO;
	
	private string _RH;
	
	private System.Nullable<bool> _Mobile1_W;
	
	private System.Nullable<bool> _Mobile2_W;
	
	private System.Nullable<System.DateTime> _CD;
	
	public SearchVolunteerResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_ID", DbType="Int NOT NULL")]
	public int V_ID
	{
		get
		{
			return this._V_ID;
		}
		set
		{
			if ((this._V_ID != value))
			{
				this._V_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_ID1", DbType="Int NOT NULL")]
	public int V_ID1
	{
		get
		{
			return this._V_ID1;
		}
		set
		{
			if ((this._V_ID1 != value))
			{
				this._V_ID1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name1", DbType="NVarChar(255)")]
	public string Name1
	{
		get
		{
			return this._Name1;
		}
		set
		{
			if ((this._Name1 != value))
			{
				this._Name1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile1", DbType="NVarChar(20)")]
	public string Mobile1
	{
		get
		{
			return this._Mobile1;
		}
		set
		{
			if ((this._Mobile1 != value))
			{
				this._Mobile1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile2", DbType="NVarChar(20)")]
	public string Mobile2
	{
		get
		{
			return this._Mobile2;
		}
		set
		{
			if ((this._Mobile2 != value))
			{
				this._Mobile2 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="NVarChar(1)")]
	public string BloodType
	{
		get
		{
			return this._BloodType;
		}
		set
		{
			if ((this._BloodType != value))
			{
				this._BloodType = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(1)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this._Gender = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNetwork1", DbType="NVarChar(1)")]
	public string MobileNetwork1
	{
		get
		{
			return this._MobileNetwork1;
		}
		set
		{
			if ((this._MobileNetwork1 != value))
			{
				this._MobileNetwork1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNetwork2", DbType="NVarChar(1)")]
	public string MobileNetwork2
	{
		get
		{
			return this._MobileNetwork2;
		}
		set
		{
			if ((this._MobileNetwork2 != value))
			{
				this._MobileNetwork2 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this._Notes = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationPoints", DbType="Int")]
	public System.Nullable<int> DonationPoints
	{
		get
		{
			return this._DonationPoints;
		}
		set
		{
			if ((this._DonationPoints != value))
			{
				this._DonationPoints = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallPoints", DbType="Int")]
	public System.Nullable<int> CallPoints
	{
		get
		{
			return this._CallPoints;
		}
		set
		{
			if ((this._CallPoints != value))
			{
				this._CallPoints = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryName", DbType="NVarChar(100)")]
	public string TerritoryName
	{
		get
		{
			return this._TerritoryName;
		}
		set
		{
			if ((this._TerritoryName != value))
			{
				this._TerritoryName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DT", DbType="Date")]
	public System.Nullable<System.DateTime> DT
	{
		get
		{
			return this._DT;
		}
		set
		{
			if ((this._DT != value))
			{
				this._DT = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_St", DbType="NVarChar(1)")]
	public string St
	{
		get
		{
			return this._St;
		}
		set
		{
			if ((this._St != value))
			{
				this._St = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cm", DbType="NVarChar(MAX)")]
	public string Cm
	{
		get
		{
			return this._Cm;
		}
		set
		{
			if ((this._Cm != value))
			{
				this._Cm = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
	public string Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			if ((this._Comments != value))
			{
				this._Comments = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABO", DbType="NVarChar(2)")]
	public string ABO
	{
		get
		{
			return this._ABO;
		}
		set
		{
			if ((this._ABO != value))
			{
				this._ABO = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RH", DbType="NVarChar(1)")]
	public string RH
	{
		get
		{
			return this._RH;
		}
		set
		{
			if ((this._RH != value))
			{
				this._RH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile1_W", DbType="Bit")]
	public System.Nullable<bool> Mobile1_W
	{
		get
		{
			return this._Mobile1_W;
		}
		set
		{
			if ((this._Mobile1_W != value))
			{
				this._Mobile1_W = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile2_W", DbType="Bit")]
	public System.Nullable<bool> Mobile2_W
	{
		get
		{
			return this._Mobile2_W;
		}
		set
		{
			if ((this._Mobile2_W != value))
			{
				this._Mobile2_W = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CD", DbType="Date")]
	public System.Nullable<System.DateTime> CD
	{
		get
		{
			return this._CD;
		}
		set
		{
			if ((this._CD != value))
			{
				this._CD = value;
			}
		}
	}
}
#pragma warning restore 1591
